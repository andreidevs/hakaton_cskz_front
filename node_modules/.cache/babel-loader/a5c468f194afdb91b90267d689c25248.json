{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport _mergeJSXProps from 'babel-helper-vue-jsx-merge-props';\nimport _defineProperty from 'babel-runtime/helpers/defineProperty';\nimport _extends from 'babel-runtime/helpers/extends';\nimport omit from 'omit.js';\nimport VcMenu, { Divider, ItemGroup } from '../vc-menu';\nimport SubMenu from './SubMenu';\nimport PropTypes from '../_util/vue-types';\nimport animation from '../_util/openAnimation';\nimport warning from '../_util/warning';\nimport Item from './MenuItem';\nimport { hasProp, getListeners, getOptionProps } from '../_util/props-util';\nimport BaseMixin from '../_util/BaseMixin';\nimport commonPropsType from '../vc-menu/commonPropsType';\nimport { ConfigConsumerProps } from '../config-provider/configConsumerProps';\nimport Base from '../base'; // import raf from '../_util/raf';\n\nexport var MenuMode = PropTypes.oneOf(['vertical', 'vertical-left', 'vertical-right', 'horizontal', 'inline']);\nexport var menuProps = _extends({}, commonPropsType, {\n  theme: PropTypes.oneOf(['light', 'dark']).def('light'),\n  mode: MenuMode.def('vertical'),\n  selectable: PropTypes.bool,\n  selectedKeys: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])),\n  defaultSelectedKeys: PropTypes.array,\n  openKeys: PropTypes.array,\n  defaultOpenKeys: PropTypes.array,\n  openAnimation: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  openTransitionName: PropTypes.string,\n  prefixCls: PropTypes.string,\n  multiple: PropTypes.bool,\n  inlineIndent: PropTypes.number.def(24),\n  inlineCollapsed: PropTypes.bool,\n  isRootMenu: PropTypes.bool.def(true),\n  focusable: PropTypes.bool.def(false)\n});\nvar Menu = {\n  name: 'AMenu',\n  props: menuProps,\n  Divider: _extends({}, Divider, {\n    name: 'AMenuDivider'\n  }),\n  Item: _extends({}, Item, {\n    name: 'AMenuItem'\n  }),\n  SubMenu: _extends({}, SubMenu, {\n    name: 'ASubMenu'\n  }),\n  ItemGroup: _extends({}, ItemGroup, {\n    name: 'AMenuItemGroup'\n  }),\n  provide: function provide() {\n    return {\n      getInlineCollapsed: this.getInlineCollapsed,\n      menuPropsContext: this.$props\n    };\n  },\n  mixins: [BaseMixin],\n  inject: {\n    layoutSiderContext: {\n      'default': function _default() {\n        return {};\n      }\n    },\n    configProvider: {\n      'default': function _default() {\n        return ConfigConsumerProps;\n      }\n    }\n  },\n  model: {\n    prop: 'selectedKeys',\n    event: 'selectChange'\n  },\n  updated: function updated() {\n    this.propsUpdating = false;\n  },\n  // beforeDestroy() {\n  //   raf.cancel(this.mountRafId);\n  // },\n  watch: {\n    mode: function mode(val, oldVal) {\n      if (oldVal === 'inline' && val !== 'inline') {\n        this.switchingModeFromInline = true;\n      }\n    },\n    openKeys: function openKeys(val) {\n      this.setState({\n        sOpenKeys: val\n      });\n    },\n    inlineCollapsed: function inlineCollapsed(val) {\n      this.collapsedChange(val);\n    },\n    'layoutSiderContext.sCollapsed': function layoutSiderContextSCollapsed(val) {\n      this.collapsedChange(val);\n    }\n  },\n  data: function data() {\n    var props = getOptionProps(this);\n    warning(!('inlineCollapsed' in props && props.mode !== 'inline'), 'Menu', \"`inlineCollapsed` should only be used when Menu's `mode` is inline.\");\n    this.switchingModeFromInline = false;\n    this.leaveAnimationExecutedWhenInlineCollapsed = false;\n    this.inlineOpenKeys = [];\n    var sOpenKeys = void 0;\n\n    if ('openKeys' in props) {\n      sOpenKeys = props.openKeys;\n    } else if ('defaultOpenKeys' in props) {\n      sOpenKeys = props.defaultOpenKeys;\n    }\n\n    return {\n      sOpenKeys: sOpenKeys\n    };\n  },\n  methods: {\n    collapsedChange: function collapsedChange(val) {\n      if (this.propsUpdating) {\n        return;\n      }\n\n      this.propsUpdating = true;\n\n      if (!hasProp(this, 'openKeys')) {\n        if (val) {\n          this.switchingModeFromInline = true;\n          this.inlineOpenKeys = this.sOpenKeys;\n          this.setState({\n            sOpenKeys: []\n          });\n        } else {\n          this.setState({\n            sOpenKeys: this.inlineOpenKeys\n          });\n          this.inlineOpenKeys = [];\n        }\n      } else if (val) {\n        // 缩起时，openKeys置为空的动画会闪动，react可以通过是否传递openKeys避免闪动，vue不是很方便动态传递openKeys\n        this.switchingModeFromInline = true;\n      }\n    },\n    restoreModeVerticalFromInline: function restoreModeVerticalFromInline() {\n      if (this.switchingModeFromInline) {\n        this.switchingModeFromInline = false;\n        this.$forceUpdate();\n      }\n    },\n    // Restore vertical mode when menu is collapsed responsively when mounted\n    // https://github.com/ant-design/ant-design/issues/13104\n    // TODO: not a perfect solution, looking a new way to avoid setting switchingModeFromInline in this situation\n    handleMouseEnter: function handleMouseEnter(e) {\n      this.restoreModeVerticalFromInline();\n      this.$emit('mouseenter', e);\n    },\n    handleTransitionEnd: function handleTransitionEnd(e) {\n      // when inlineCollapsed menu width animation finished\n      // https://github.com/ant-design/ant-design/issues/12864\n      var widthCollapsed = e.propertyName === 'width' && e.target === e.currentTarget; // Fix SVGElement e.target.className.indexOf is not a function\n      // https://github.com/ant-design/ant-design/issues/15699\n\n      var className = e.target.className; // SVGAnimatedString.animVal should be identical to SVGAnimatedString.baseVal, unless during an animation.\n\n      var classNameValue = Object.prototype.toString.call(className) === '[object SVGAnimatedString]' ? className.animVal : className; // Fix for <Menu style={{ width: '100%' }} />, the width transition won't trigger when menu is collapsed\n      // https://github.com/ant-design/ant-design-pro/issues/2783\n\n      var iconScaled = e.propertyName === 'font-size' && classNameValue.indexOf('anticon') >= 0;\n\n      if (widthCollapsed || iconScaled) {\n        this.restoreModeVerticalFromInline();\n      }\n    },\n    handleClick: function handleClick(e) {\n      this.handleOpenChange([]);\n      this.$emit('click', e);\n    },\n    handleSelect: function handleSelect(info) {\n      this.$emit('select', info);\n      this.$emit('selectChange', info.selectedKeys);\n    },\n    handleDeselect: function handleDeselect(info) {\n      this.$emit('deselect', info);\n      this.$emit('selectChange', info.selectedKeys);\n    },\n    handleOpenChange: function handleOpenChange(openKeys) {\n      this.setOpenKeys(openKeys);\n      this.$emit('openChange', openKeys);\n      this.$emit('update:openKeys', openKeys);\n    },\n    setOpenKeys: function setOpenKeys(openKeys) {\n      if (!hasProp(this, 'openKeys')) {\n        this.setState({\n          sOpenKeys: openKeys\n        });\n      }\n    },\n    getRealMenuMode: function getRealMenuMode() {\n      var inlineCollapsed = this.getInlineCollapsed();\n\n      if (this.switchingModeFromInline && inlineCollapsed) {\n        return 'inline';\n      }\n\n      var mode = this.$props.mode;\n      return inlineCollapsed ? 'vertical' : mode;\n    },\n    getInlineCollapsed: function getInlineCollapsed() {\n      var inlineCollapsed = this.$props.inlineCollapsed;\n\n      if (this.layoutSiderContext.sCollapsed !== undefined) {\n        return this.layoutSiderContext.sCollapsed;\n      }\n\n      return inlineCollapsed;\n    },\n    getMenuOpenAnimation: function getMenuOpenAnimation(menuMode) {\n      var _$props = this.$props,\n          openAnimation = _$props.openAnimation,\n          openTransitionName = _$props.openTransitionName;\n      var menuOpenAnimation = openAnimation || openTransitionName;\n\n      if (openAnimation === undefined && openTransitionName === undefined) {\n        if (menuMode === 'horizontal') {\n          menuOpenAnimation = 'slide-up';\n        } else if (menuMode === 'inline') {\n          menuOpenAnimation = {\n            on: animation\n          };\n        } else {\n          // When mode switch from inline\n          // submenu should hide without animation\n          if (this.switchingModeFromInline) {\n            menuOpenAnimation = '';\n            this.switchingModeFromInline = false;\n          } else {\n            menuOpenAnimation = 'zoom-big';\n          }\n        }\n      }\n\n      return menuOpenAnimation;\n    }\n  },\n  render: function render() {\n    var _menuClassName,\n        _this = this;\n\n    var h = arguments[0];\n    var layoutSiderContext = this.layoutSiderContext,\n        $slots = this.$slots;\n    var collapsedWidth = layoutSiderContext.collapsedWidth;\n    var getContextPopupContainer = this.configProvider.getPopupContainer;\n    var props = getOptionProps(this);\n    var customizePrefixCls = props.prefixCls,\n        theme = props.theme,\n        getPopupContainer = props.getPopupContainer;\n    var getPrefixCls = this.configProvider.getPrefixCls;\n    var prefixCls = getPrefixCls('menu', customizePrefixCls);\n    var menuMode = this.getRealMenuMode();\n    var menuOpenAnimation = this.getMenuOpenAnimation(menuMode);\n    var menuClassName = (_menuClassName = {}, _defineProperty(_menuClassName, prefixCls + '-' + theme, true), _defineProperty(_menuClassName, prefixCls + '-inline-collapsed', this.getInlineCollapsed()), _menuClassName);\n    var menuProps = {\n      props: _extends({}, omit(props, ['inlineCollapsed']), {\n        getPopupContainer: getPopupContainer || getContextPopupContainer,\n        openKeys: this.sOpenKeys,\n        mode: menuMode,\n        prefixCls: prefixCls\n      }),\n      on: _extends({}, getListeners(this), {\n        select: this.handleSelect,\n        deselect: this.handleDeselect,\n        openChange: this.handleOpenChange,\n        mouseenter: this.handleMouseEnter\n      }),\n      nativeOn: {\n        transitionend: this.handleTransitionEnd\n      }\n    };\n\n    if (!hasProp(this, 'selectedKeys')) {\n      delete menuProps.props.selectedKeys;\n    }\n\n    if (menuMode !== 'inline') {\n      // closing vertical popup submenu after click it\n      menuProps.on.click = this.handleClick;\n      menuProps.props.openTransitionName = menuOpenAnimation;\n    } else {\n      menuProps.on.click = function (e) {\n        _this.$emit('click', e);\n      };\n\n      menuProps.props.openAnimation = menuOpenAnimation;\n    } // https://github.com/ant-design/ant-design/issues/8587\n\n\n    var hideMenu = this.getInlineCollapsed() && (collapsedWidth === 0 || collapsedWidth === '0' || collapsedWidth === '0px');\n\n    if (hideMenu) {\n      menuProps.props.openKeys = [];\n    }\n\n    return h(VcMenu, _mergeJSXProps([menuProps, {\n      'class': menuClassName\n    }]), [$slots['default']]);\n  }\n};\n/* istanbul ignore next */\n\nMenu.install = function (Vue) {\n  Vue.use(Base);\n  Vue.component(Menu.name, Menu);\n  Vue.component(Menu.Item.name, Menu.Item);\n  Vue.component(Menu.SubMenu.name, Menu.SubMenu);\n  Vue.component(Menu.Divider.name, Menu.Divider);\n  Vue.component(Menu.ItemGroup.name, Menu.ItemGroup);\n};\n\nexport default Menu;","map":{"version":3,"names":["_mergeJSXProps","_defineProperty","_extends","omit","VcMenu","Divider","ItemGroup","SubMenu","PropTypes","animation","warning","Item","hasProp","getListeners","getOptionProps","BaseMixin","commonPropsType","ConfigConsumerProps","Base","MenuMode","oneOf","menuProps","theme","def","mode","selectable","bool","selectedKeys","arrayOf","oneOfType","string","number","defaultSelectedKeys","array","openKeys","defaultOpenKeys","openAnimation","object","openTransitionName","prefixCls","multiple","inlineIndent","inlineCollapsed","isRootMenu","focusable","Menu","name","props","provide","getInlineCollapsed","menuPropsContext","$props","mixins","inject","layoutSiderContext","_default","configProvider","model","prop","event","updated","propsUpdating","watch","val","oldVal","switchingModeFromInline","setState","sOpenKeys","collapsedChange","layoutSiderContextSCollapsed","data","leaveAnimationExecutedWhenInlineCollapsed","inlineOpenKeys","methods","restoreModeVerticalFromInline","$forceUpdate","handleMouseEnter","e","$emit","handleTransitionEnd","widthCollapsed","propertyName","target","currentTarget","className","classNameValue","Object","prototype","toString","call","animVal","iconScaled","indexOf","handleClick","handleOpenChange","handleSelect","info","handleDeselect","setOpenKeys","getRealMenuMode","sCollapsed","undefined","getMenuOpenAnimation","menuMode","_$props","menuOpenAnimation","on","render","_menuClassName","_this","h","arguments","$slots","collapsedWidth","getContextPopupContainer","getPopupContainer","customizePrefixCls","getPrefixCls","menuClassName","select","deselect","openChange","mouseenter","nativeOn","transitionend","click","hideMenu","install","Vue","use","component"],"sources":["/Users/andreidev/domains/hakaton_cskz_front/node_modules/ant-design-vue/es/menu/index.js"],"sourcesContent":["import _mergeJSXProps from 'babel-helper-vue-jsx-merge-props';\nimport _defineProperty from 'babel-runtime/helpers/defineProperty';\nimport _extends from 'babel-runtime/helpers/extends';\nimport omit from 'omit.js';\nimport VcMenu, { Divider, ItemGroup } from '../vc-menu';\nimport SubMenu from './SubMenu';\nimport PropTypes from '../_util/vue-types';\nimport animation from '../_util/openAnimation';\nimport warning from '../_util/warning';\nimport Item from './MenuItem';\nimport { hasProp, getListeners, getOptionProps } from '../_util/props-util';\nimport BaseMixin from '../_util/BaseMixin';\nimport commonPropsType from '../vc-menu/commonPropsType';\nimport { ConfigConsumerProps } from '../config-provider/configConsumerProps';\nimport Base from '../base';\n// import raf from '../_util/raf';\n\nexport var MenuMode = PropTypes.oneOf(['vertical', 'vertical-left', 'vertical-right', 'horizontal', 'inline']);\n\nexport var menuProps = _extends({}, commonPropsType, {\n  theme: PropTypes.oneOf(['light', 'dark']).def('light'),\n  mode: MenuMode.def('vertical'),\n  selectable: PropTypes.bool,\n  selectedKeys: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])),\n  defaultSelectedKeys: PropTypes.array,\n  openKeys: PropTypes.array,\n  defaultOpenKeys: PropTypes.array,\n  openAnimation: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  openTransitionName: PropTypes.string,\n  prefixCls: PropTypes.string,\n  multiple: PropTypes.bool,\n  inlineIndent: PropTypes.number.def(24),\n  inlineCollapsed: PropTypes.bool,\n  isRootMenu: PropTypes.bool.def(true),\n  focusable: PropTypes.bool.def(false)\n});\n\nvar Menu = {\n  name: 'AMenu',\n  props: menuProps,\n  Divider: _extends({}, Divider, { name: 'AMenuDivider' }),\n  Item: _extends({}, Item, { name: 'AMenuItem' }),\n  SubMenu: _extends({}, SubMenu, { name: 'ASubMenu' }),\n  ItemGroup: _extends({}, ItemGroup, { name: 'AMenuItemGroup' }),\n  provide: function provide() {\n    return {\n      getInlineCollapsed: this.getInlineCollapsed,\n      menuPropsContext: this.$props\n    };\n  },\n\n  mixins: [BaseMixin],\n  inject: {\n    layoutSiderContext: { 'default': function _default() {\n        return {};\n      } },\n    configProvider: { 'default': function _default() {\n        return ConfigConsumerProps;\n      } }\n  },\n  model: {\n    prop: 'selectedKeys',\n    event: 'selectChange'\n  },\n  updated: function updated() {\n    this.propsUpdating = false;\n  },\n\n  // beforeDestroy() {\n  //   raf.cancel(this.mountRafId);\n  // },\n  watch: {\n    mode: function mode(val, oldVal) {\n      if (oldVal === 'inline' && val !== 'inline') {\n        this.switchingModeFromInline = true;\n      }\n    },\n    openKeys: function openKeys(val) {\n      this.setState({ sOpenKeys: val });\n    },\n    inlineCollapsed: function inlineCollapsed(val) {\n      this.collapsedChange(val);\n    },\n    'layoutSiderContext.sCollapsed': function layoutSiderContextSCollapsed(val) {\n      this.collapsedChange(val);\n    }\n  },\n  data: function data() {\n    var props = getOptionProps(this);\n    warning(!('inlineCollapsed' in props && props.mode !== 'inline'), 'Menu', \"`inlineCollapsed` should only be used when Menu's `mode` is inline.\");\n    this.switchingModeFromInline = false;\n    this.leaveAnimationExecutedWhenInlineCollapsed = false;\n    this.inlineOpenKeys = [];\n    var sOpenKeys = void 0;\n\n    if ('openKeys' in props) {\n      sOpenKeys = props.openKeys;\n    } else if ('defaultOpenKeys' in props) {\n      sOpenKeys = props.defaultOpenKeys;\n    }\n    return {\n      sOpenKeys: sOpenKeys\n    };\n  },\n\n  methods: {\n    collapsedChange: function collapsedChange(val) {\n      if (this.propsUpdating) {\n        return;\n      }\n      this.propsUpdating = true;\n      if (!hasProp(this, 'openKeys')) {\n        if (val) {\n          this.switchingModeFromInline = true;\n          this.inlineOpenKeys = this.sOpenKeys;\n          this.setState({ sOpenKeys: [] });\n        } else {\n          this.setState({ sOpenKeys: this.inlineOpenKeys });\n          this.inlineOpenKeys = [];\n        }\n      } else if (val) {\n        // 缩起时，openKeys置为空的动画会闪动，react可以通过是否传递openKeys避免闪动，vue不是很方便动态传递openKeys\n        this.switchingModeFromInline = true;\n      }\n    },\n    restoreModeVerticalFromInline: function restoreModeVerticalFromInline() {\n      if (this.switchingModeFromInline) {\n        this.switchingModeFromInline = false;\n        this.$forceUpdate();\n      }\n    },\n\n    // Restore vertical mode when menu is collapsed responsively when mounted\n    // https://github.com/ant-design/ant-design/issues/13104\n    // TODO: not a perfect solution, looking a new way to avoid setting switchingModeFromInline in this situation\n    handleMouseEnter: function handleMouseEnter(e) {\n      this.restoreModeVerticalFromInline();\n      this.$emit('mouseenter', e);\n    },\n    handleTransitionEnd: function handleTransitionEnd(e) {\n      // when inlineCollapsed menu width animation finished\n      // https://github.com/ant-design/ant-design/issues/12864\n      var widthCollapsed = e.propertyName === 'width' && e.target === e.currentTarget;\n\n      // Fix SVGElement e.target.className.indexOf is not a function\n      // https://github.com/ant-design/ant-design/issues/15699\n      var className = e.target.className;\n      // SVGAnimatedString.animVal should be identical to SVGAnimatedString.baseVal, unless during an animation.\n\n      var classNameValue = Object.prototype.toString.call(className) === '[object SVGAnimatedString]' ? className.animVal : className;\n\n      // Fix for <Menu style={{ width: '100%' }} />, the width transition won't trigger when menu is collapsed\n      // https://github.com/ant-design/ant-design-pro/issues/2783\n      var iconScaled = e.propertyName === 'font-size' && classNameValue.indexOf('anticon') >= 0;\n\n      if (widthCollapsed || iconScaled) {\n        this.restoreModeVerticalFromInline();\n      }\n    },\n    handleClick: function handleClick(e) {\n      this.handleOpenChange([]);\n      this.$emit('click', e);\n    },\n    handleSelect: function handleSelect(info) {\n      this.$emit('select', info);\n      this.$emit('selectChange', info.selectedKeys);\n    },\n    handleDeselect: function handleDeselect(info) {\n      this.$emit('deselect', info);\n      this.$emit('selectChange', info.selectedKeys);\n    },\n    handleOpenChange: function handleOpenChange(openKeys) {\n      this.setOpenKeys(openKeys);\n      this.$emit('openChange', openKeys);\n      this.$emit('update:openKeys', openKeys);\n    },\n    setOpenKeys: function setOpenKeys(openKeys) {\n      if (!hasProp(this, 'openKeys')) {\n        this.setState({ sOpenKeys: openKeys });\n      }\n    },\n    getRealMenuMode: function getRealMenuMode() {\n      var inlineCollapsed = this.getInlineCollapsed();\n      if (this.switchingModeFromInline && inlineCollapsed) {\n        return 'inline';\n      }\n      var mode = this.$props.mode;\n\n      return inlineCollapsed ? 'vertical' : mode;\n    },\n    getInlineCollapsed: function getInlineCollapsed() {\n      var inlineCollapsed = this.$props.inlineCollapsed;\n\n      if (this.layoutSiderContext.sCollapsed !== undefined) {\n        return this.layoutSiderContext.sCollapsed;\n      }\n      return inlineCollapsed;\n    },\n    getMenuOpenAnimation: function getMenuOpenAnimation(menuMode) {\n      var _$props = this.$props,\n          openAnimation = _$props.openAnimation,\n          openTransitionName = _$props.openTransitionName;\n\n      var menuOpenAnimation = openAnimation || openTransitionName;\n      if (openAnimation === undefined && openTransitionName === undefined) {\n        if (menuMode === 'horizontal') {\n          menuOpenAnimation = 'slide-up';\n        } else if (menuMode === 'inline') {\n          menuOpenAnimation = { on: animation };\n        } else {\n          // When mode switch from inline\n          // submenu should hide without animation\n          if (this.switchingModeFromInline) {\n            menuOpenAnimation = '';\n            this.switchingModeFromInline = false;\n          } else {\n            menuOpenAnimation = 'zoom-big';\n          }\n        }\n      }\n      return menuOpenAnimation;\n    }\n  },\n  render: function render() {\n    var _menuClassName,\n        _this = this;\n\n    var h = arguments[0];\n    var layoutSiderContext = this.layoutSiderContext,\n        $slots = this.$slots;\n    var collapsedWidth = layoutSiderContext.collapsedWidth;\n    var getContextPopupContainer = this.configProvider.getPopupContainer;\n\n    var props = getOptionProps(this);\n    var customizePrefixCls = props.prefixCls,\n        theme = props.theme,\n        getPopupContainer = props.getPopupContainer;\n\n    var getPrefixCls = this.configProvider.getPrefixCls;\n    var prefixCls = getPrefixCls('menu', customizePrefixCls);\n    var menuMode = this.getRealMenuMode();\n    var menuOpenAnimation = this.getMenuOpenAnimation(menuMode);\n\n    var menuClassName = (_menuClassName = {}, _defineProperty(_menuClassName, prefixCls + '-' + theme, true), _defineProperty(_menuClassName, prefixCls + '-inline-collapsed', this.getInlineCollapsed()), _menuClassName);\n\n    var menuProps = {\n      props: _extends({}, omit(props, ['inlineCollapsed']), {\n        getPopupContainer: getPopupContainer || getContextPopupContainer,\n        openKeys: this.sOpenKeys,\n        mode: menuMode,\n        prefixCls: prefixCls\n      }),\n      on: _extends({}, getListeners(this), {\n        select: this.handleSelect,\n        deselect: this.handleDeselect,\n        openChange: this.handleOpenChange,\n        mouseenter: this.handleMouseEnter\n      }),\n      nativeOn: {\n        transitionend: this.handleTransitionEnd\n      }\n    };\n    if (!hasProp(this, 'selectedKeys')) {\n      delete menuProps.props.selectedKeys;\n    }\n\n    if (menuMode !== 'inline') {\n      // closing vertical popup submenu after click it\n      menuProps.on.click = this.handleClick;\n      menuProps.props.openTransitionName = menuOpenAnimation;\n    } else {\n      menuProps.on.click = function (e) {\n        _this.$emit('click', e);\n      };\n      menuProps.props.openAnimation = menuOpenAnimation;\n    }\n\n    // https://github.com/ant-design/ant-design/issues/8587\n    var hideMenu = this.getInlineCollapsed() && (collapsedWidth === 0 || collapsedWidth === '0' || collapsedWidth === '0px');\n    if (hideMenu) {\n      menuProps.props.openKeys = [];\n    }\n\n    return h(\n      VcMenu,\n      _mergeJSXProps([menuProps, { 'class': menuClassName }]),\n      [$slots['default']]\n    );\n  }\n};\n\n/* istanbul ignore next */\nMenu.install = function (Vue) {\n  Vue.use(Base);\n  Vue.component(Menu.name, Menu);\n  Vue.component(Menu.Item.name, Menu.Item);\n  Vue.component(Menu.SubMenu.name, Menu.SubMenu);\n  Vue.component(Menu.Divider.name, Menu.Divider);\n  Vue.component(Menu.ItemGroup.name, Menu.ItemGroup);\n};\nexport default Menu;"],"mappings":"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"},"metadata":{},"sourceType":"module"}
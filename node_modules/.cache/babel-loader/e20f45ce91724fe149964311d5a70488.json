{"ast":null,"code":"import \"core-js/modules/web.timers.js\";\nimport _mergeJSXProps from 'babel-helper-vue-jsx-merge-props';\nimport PropTypes from '../_util/vue-types';\nimport Button from '../button';\nimport BaseMixin from '../_util/BaseMixin';\nimport buttonTypes from '../button/buttonTypes';\nvar ButtonType = buttonTypes().type;\nvar ActionButtonProps = {\n  type: ButtonType,\n  actionFn: PropTypes.func,\n  closeModal: PropTypes.func,\n  autoFocus: PropTypes.bool,\n  buttonProps: PropTypes.object\n};\nexport default {\n  mixins: [BaseMixin],\n  props: ActionButtonProps,\n  data: function data() {\n    return {\n      loading: false\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    if (this.autoFocus) {\n      this.timeoutId = setTimeout(function () {\n        return _this.$el.focus();\n      });\n    }\n  },\n  beforeDestroy: function beforeDestroy() {\n    clearTimeout(this.timeoutId);\n  },\n  methods: {\n    onClick: function onClick() {\n      var _this2 = this;\n\n      var actionFn = this.actionFn,\n          closeModal = this.closeModal;\n\n      if (actionFn) {\n        var ret = void 0;\n\n        if (actionFn.length) {\n          ret = actionFn(closeModal);\n        } else {\n          ret = actionFn();\n\n          if (!ret) {\n            closeModal();\n          }\n        }\n\n        if (ret && ret.then) {\n          this.setState({\n            loading: true\n          });\n          ret.then(function () {\n            // It's unnecessary to set loading=false, for the Modal will be unmounted after close.\n            // this.setState({ loading: false });\n            closeModal.apply(undefined, arguments);\n          }, function (e) {\n            // Emit error when catch promise reject\n            // eslint-disable-next-line no-console\n            console.error(e); // See: https://github.com/ant-design/ant-design/issues/6183\n\n            _this2.setState({\n              loading: false\n            });\n          });\n        }\n      } else {\n        closeModal();\n      }\n    }\n  },\n  render: function render() {\n    var h = arguments[0];\n    var type = this.type,\n        $slots = this.$slots,\n        loading = this.loading,\n        buttonProps = this.buttonProps;\n    return h(Button, _mergeJSXProps([{\n      attrs: {\n        type: type,\n        loading: loading\n      },\n      on: {\n        'click': this.onClick\n      }\n    }, buttonProps]), [$slots['default']]);\n  }\n};","map":{"version":3,"names":["_mergeJSXProps","PropTypes","Button","BaseMixin","buttonTypes","ButtonType","type","ActionButtonProps","actionFn","func","closeModal","autoFocus","bool","buttonProps","object","mixins","props","data","loading","mounted","_this","timeoutId","setTimeout","$el","focus","beforeDestroy","clearTimeout","methods","onClick","_this2","ret","length","then","setState","apply","undefined","arguments","e","console","error","render","h","$slots","attrs","on"],"sources":["/Users/andreidev/domains/hakaton_cskz_front/node_modules/ant-design-vue/es/modal/ActionButton.js"],"sourcesContent":["import _mergeJSXProps from 'babel-helper-vue-jsx-merge-props';\nimport PropTypes from '../_util/vue-types';\nimport Button from '../button';\nimport BaseMixin from '../_util/BaseMixin';\nimport buttonTypes from '../button/buttonTypes';\nvar ButtonType = buttonTypes().type;\nvar ActionButtonProps = {\n  type: ButtonType,\n  actionFn: PropTypes.func,\n  closeModal: PropTypes.func,\n  autoFocus: PropTypes.bool,\n  buttonProps: PropTypes.object\n};\n\nexport default {\n  mixins: [BaseMixin],\n  props: ActionButtonProps,\n  data: function data() {\n    return {\n      loading: false\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    if (this.autoFocus) {\n      this.timeoutId = setTimeout(function () {\n        return _this.$el.focus();\n      });\n    }\n  },\n  beforeDestroy: function beforeDestroy() {\n    clearTimeout(this.timeoutId);\n  },\n\n  methods: {\n    onClick: function onClick() {\n      var _this2 = this;\n\n      var actionFn = this.actionFn,\n          closeModal = this.closeModal;\n\n      if (actionFn) {\n        var ret = void 0;\n        if (actionFn.length) {\n          ret = actionFn(closeModal);\n        } else {\n          ret = actionFn();\n          if (!ret) {\n            closeModal();\n          }\n        }\n        if (ret && ret.then) {\n          this.setState({ loading: true });\n          ret.then(function () {\n            // It's unnecessary to set loading=false, for the Modal will be unmounted after close.\n            // this.setState({ loading: false });\n            closeModal.apply(undefined, arguments);\n          }, function (e) {\n            // Emit error when catch promise reject\n            // eslint-disable-next-line no-console\n            console.error(e);\n            // See: https://github.com/ant-design/ant-design/issues/6183\n            _this2.setState({ loading: false });\n          });\n        }\n      } else {\n        closeModal();\n      }\n    }\n  },\n\n  render: function render() {\n    var h = arguments[0];\n    var type = this.type,\n        $slots = this.$slots,\n        loading = this.loading,\n        buttonProps = this.buttonProps;\n\n    return h(\n      Button,\n      _mergeJSXProps([{\n        attrs: { type: type, loading: loading },\n        on: {\n          'click': this.onClick\n        }\n      }, buttonProps]),\n      [$slots['default']]\n    );\n  }\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}
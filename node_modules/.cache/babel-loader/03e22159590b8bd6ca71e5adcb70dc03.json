{"ast":null,"code":"import \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport _typeof from 'babel-runtime/helpers/typeof';\nimport _defineProperty from 'babel-runtime/helpers/defineProperty';\nimport _extends from 'babel-runtime/helpers/extends';\nimport { Option, OptGroup } from '../vc-select';\nimport Select, { AbstractSelectProps, SelectValue } from '../select';\nimport Input from '../input';\nimport InputElement from './InputElement';\nimport PropTypes from '../_util/vue-types';\nimport { ConfigConsumerProps } from '../config-provider/configConsumerProps';\nimport { getComponentFromProp, getOptionProps, filterEmpty, isValidElement, getListeners } from '../_util/props-util';\nimport Base from '../base'; // const DataSourceItemObject = PropTypes.shape({\n//   value: String,\n//   text: String,\n// }).loose\n// const DataSourceItemType = PropTypes.oneOfType([\n//   PropTypes.string,\n//   DataSourceItemObject,\n// ]).isRequired\n// export interface AutoCompleteInputProps {\n//   onChange?: React.FormEventHandler<any>;\n//   value: any;\n// }\n\nvar AutoCompleteProps = _extends({}, AbstractSelectProps(), {\n  value: SelectValue,\n  defaultValue: SelectValue,\n  dataSource: PropTypes.array,\n  dropdownMenuStyle: PropTypes.object,\n  optionLabelProp: String,\n  dropdownMatchSelectWidth: PropTypes.bool // onChange?: (value: SelectValue) => void;\n  // onSelect?: (value: SelectValue, option: Object) => any;\n\n});\n\nvar AutoComplete = {\n  name: 'AAutoComplete',\n  props: _extends({}, AutoCompleteProps, {\n    prefixCls: PropTypes.string,\n    showSearch: PropTypes.bool.def(false),\n    transitionName: PropTypes.string.def('slide-up'),\n    choiceTransitionName: PropTypes.string.def('zoom'),\n    autoFocus: PropTypes.bool,\n    backfill: PropTypes.bool,\n    optionLabelProp: PropTypes.string.def('children'),\n    filterOption: PropTypes.oneOfType([PropTypes.bool, PropTypes.func]).def(false),\n    defaultActiveFirstOption: PropTypes.bool.def(true)\n  }),\n  Option: _extends({}, Option, {\n    name: 'AAutoCompleteOption'\n  }),\n  OptGroup: _extends({}, OptGroup, {\n    name: 'AAutoCompleteOptGroup'\n  }),\n  model: {\n    prop: 'value',\n    event: 'change'\n  },\n  inject: {\n    configProvider: {\n      'default': function _default() {\n        return ConfigConsumerProps;\n      }\n    }\n  },\n  provide: function provide() {\n    return {\n      savePopupRef: this.savePopupRef\n    };\n  },\n  methods: {\n    savePopupRef: function savePopupRef(ref) {\n      this.popupRef = ref;\n    },\n    getInputElement: function getInputElement() {\n      var h = this.$createElement;\n      var $slots = this.$slots,\n          placeholder = this.placeholder;\n      var children = filterEmpty($slots['default']);\n      var element = children.length ? children[0] : h(Input, {\n        attrs: {\n          lazy: false\n        }\n      });\n      return h(InputElement, {\n        attrs: {\n          placeholder: placeholder\n        }\n      }, [element]);\n    },\n    focus: function focus() {\n      if (this.$refs.select) {\n        this.$refs.select.focus();\n      }\n    },\n    blur: function blur() {\n      if (this.$refs.select) {\n        this.$refs.select.blur();\n      }\n    }\n  },\n  render: function render() {\n    var _cls;\n\n    var h = arguments[0];\n    var size = this.size,\n        customizePrefixCls = this.prefixCls,\n        optionLabelProp = this.optionLabelProp,\n        dataSource = this.dataSource,\n        $slots = this.$slots;\n    var getPrefixCls = this.configProvider.getPrefixCls;\n    var prefixCls = getPrefixCls('select', customizePrefixCls);\n    var cls = (_cls = {}, _defineProperty(_cls, prefixCls + '-lg', size === 'large'), _defineProperty(_cls, prefixCls + '-sm', size === 'small'), _defineProperty(_cls, prefixCls + '-show-search', true), _defineProperty(_cls, prefixCls + '-auto-complete', true), _cls);\n    var options = void 0;\n    var childArray = filterEmpty($slots.dataSource);\n\n    if (childArray.length) {\n      options = childArray;\n    } else {\n      options = dataSource ? dataSource.map(function (item) {\n        if (isValidElement(item)) {\n          return item;\n        }\n\n        switch (typeof item === 'undefined' ? 'undefined' : _typeof(item)) {\n          case 'string':\n            return h(Option, {\n              key: item\n            }, [item]);\n\n          case 'object':\n            return h(Option, {\n              key: item.value\n            }, [item.text]);\n\n          default:\n            throw new Error('AutoComplete[dataSource] only supports type `string[] | Object[]`.');\n        }\n      }) : [];\n    }\n\n    var selectProps = {\n      props: _extends({}, getOptionProps(this), {\n        mode: Select.SECRET_COMBOBOX_MODE_DO_NOT_USE,\n        optionLabelProp: optionLabelProp,\n        getInputElement: this.getInputElement,\n        notFoundContent: getComponentFromProp(this, 'notFoundContent'),\n        placeholder: ''\n      }),\n      'class': cls,\n      ref: 'select',\n      on: getListeners(this)\n    };\n    return h(Select, selectProps, [options]);\n  }\n};\n/* istanbul ignore next */\n\nAutoComplete.install = function (Vue) {\n  Vue.use(Base);\n  Vue.component(AutoComplete.name, AutoComplete);\n  Vue.component(AutoComplete.Option.name, AutoComplete.Option);\n  Vue.component(AutoComplete.OptGroup.name, AutoComplete.OptGroup);\n};\n\nexport default AutoComplete;","map":{"version":3,"names":["_typeof","_defineProperty","_extends","Option","OptGroup","Select","AbstractSelectProps","SelectValue","Input","InputElement","PropTypes","ConfigConsumerProps","getComponentFromProp","getOptionProps","filterEmpty","isValidElement","getListeners","Base","AutoCompleteProps","value","defaultValue","dataSource","array","dropdownMenuStyle","object","optionLabelProp","String","dropdownMatchSelectWidth","bool","AutoComplete","name","props","prefixCls","string","showSearch","def","transitionName","choiceTransitionName","autoFocus","backfill","filterOption","oneOfType","func","defaultActiveFirstOption","model","prop","event","inject","configProvider","_default","provide","savePopupRef","methods","ref","popupRef","getInputElement","h","$createElement","$slots","placeholder","children","element","length","attrs","lazy","focus","$refs","select","blur","render","_cls","arguments","size","customizePrefixCls","getPrefixCls","cls","options","childArray","map","item","key","text","Error","selectProps","mode","SECRET_COMBOBOX_MODE_DO_NOT_USE","notFoundContent","on","install","Vue","use","component"],"sources":["/Users/andreidev/domains/hakaton_cskz_front/node_modules/ant-design-vue/es/auto-complete/index.js"],"sourcesContent":["import _typeof from 'babel-runtime/helpers/typeof';\nimport _defineProperty from 'babel-runtime/helpers/defineProperty';\nimport _extends from 'babel-runtime/helpers/extends';\nimport { Option, OptGroup } from '../vc-select';\nimport Select, { AbstractSelectProps, SelectValue } from '../select';\nimport Input from '../input';\nimport InputElement from './InputElement';\nimport PropTypes from '../_util/vue-types';\nimport { ConfigConsumerProps } from '../config-provider/configConsumerProps';\nimport { getComponentFromProp, getOptionProps, filterEmpty, isValidElement, getListeners } from '../_util/props-util';\nimport Base from '../base';\n\n// const DataSourceItemObject = PropTypes.shape({\n//   value: String,\n//   text: String,\n// }).loose\n// const DataSourceItemType = PropTypes.oneOfType([\n//   PropTypes.string,\n//   DataSourceItemObject,\n// ]).isRequired\n\n// export interface AutoCompleteInputProps {\n//   onChange?: React.FormEventHandler<any>;\n//   value: any;\n// }\n\nvar AutoCompleteProps = _extends({}, AbstractSelectProps(), {\n  value: SelectValue,\n  defaultValue: SelectValue,\n  dataSource: PropTypes.array,\n  dropdownMenuStyle: PropTypes.object,\n  optionLabelProp: String,\n  dropdownMatchSelectWidth: PropTypes.bool\n  // onChange?: (value: SelectValue) => void;\n  // onSelect?: (value: SelectValue, option: Object) => any;\n});\n\nvar AutoComplete = {\n  name: 'AAutoComplete',\n  props: _extends({}, AutoCompleteProps, {\n    prefixCls: PropTypes.string,\n    showSearch: PropTypes.bool.def(false),\n    transitionName: PropTypes.string.def('slide-up'),\n    choiceTransitionName: PropTypes.string.def('zoom'),\n    autoFocus: PropTypes.bool,\n    backfill: PropTypes.bool,\n    optionLabelProp: PropTypes.string.def('children'),\n    filterOption: PropTypes.oneOfType([PropTypes.bool, PropTypes.func]).def(false),\n    defaultActiveFirstOption: PropTypes.bool.def(true)\n  }),\n  Option: _extends({}, Option, { name: 'AAutoCompleteOption' }),\n  OptGroup: _extends({}, OptGroup, { name: 'AAutoCompleteOptGroup' }),\n  model: {\n    prop: 'value',\n    event: 'change'\n  },\n  inject: {\n    configProvider: { 'default': function _default() {\n        return ConfigConsumerProps;\n      } }\n  },\n  provide: function provide() {\n    return {\n      savePopupRef: this.savePopupRef\n    };\n  },\n\n  methods: {\n    savePopupRef: function savePopupRef(ref) {\n      this.popupRef = ref;\n    },\n    getInputElement: function getInputElement() {\n      var h = this.$createElement;\n      var $slots = this.$slots,\n          placeholder = this.placeholder;\n\n      var children = filterEmpty($slots['default']);\n      var element = children.length ? children[0] : h(Input, {\n        attrs: { lazy: false }\n      });\n      return h(\n        InputElement,\n        {\n          attrs: { placeholder: placeholder }\n        },\n        [element]\n      );\n    },\n    focus: function focus() {\n      if (this.$refs.select) {\n        this.$refs.select.focus();\n      }\n    },\n    blur: function blur() {\n      if (this.$refs.select) {\n        this.$refs.select.blur();\n      }\n    }\n  },\n\n  render: function render() {\n    var _cls;\n\n    var h = arguments[0];\n    var size = this.size,\n        customizePrefixCls = this.prefixCls,\n        optionLabelProp = this.optionLabelProp,\n        dataSource = this.dataSource,\n        $slots = this.$slots;\n\n\n    var getPrefixCls = this.configProvider.getPrefixCls;\n    var prefixCls = getPrefixCls('select', customizePrefixCls);\n\n    var cls = (_cls = {}, _defineProperty(_cls, prefixCls + '-lg', size === 'large'), _defineProperty(_cls, prefixCls + '-sm', size === 'small'), _defineProperty(_cls, prefixCls + '-show-search', true), _defineProperty(_cls, prefixCls + '-auto-complete', true), _cls);\n\n    var options = void 0;\n    var childArray = filterEmpty($slots.dataSource);\n    if (childArray.length) {\n      options = childArray;\n    } else {\n      options = dataSource ? dataSource.map(function (item) {\n        if (isValidElement(item)) {\n          return item;\n        }\n        switch (typeof item === 'undefined' ? 'undefined' : _typeof(item)) {\n          case 'string':\n            return h(\n              Option,\n              { key: item },\n              [item]\n            );\n          case 'object':\n            return h(\n              Option,\n              { key: item.value },\n              [item.text]\n            );\n          default:\n            throw new Error('AutoComplete[dataSource] only supports type `string[] | Object[]`.');\n        }\n      }) : [];\n    }\n    var selectProps = {\n      props: _extends({}, getOptionProps(this), {\n        mode: Select.SECRET_COMBOBOX_MODE_DO_NOT_USE,\n        optionLabelProp: optionLabelProp,\n        getInputElement: this.getInputElement,\n        notFoundContent: getComponentFromProp(this, 'notFoundContent'),\n        placeholder: ''\n      }),\n      'class': cls,\n      ref: 'select',\n      on: getListeners(this)\n    };\n    return h(\n      Select,\n      selectProps,\n      [options]\n    );\n  }\n};\n\n/* istanbul ignore next */\nAutoComplete.install = function (Vue) {\n  Vue.use(Base);\n  Vue.component(AutoComplete.name, AutoComplete);\n  Vue.component(AutoComplete.Option.name, AutoComplete.Option);\n  Vue.component(AutoComplete.OptGroup.name, AutoComplete.OptGroup);\n};\n\nexport default AutoComplete;"],"mappings":";;;;AAAA,OAAOA,OAAP,MAAoB,8BAApB;AACA,OAAOC,eAAP,MAA4B,sCAA5B;AACA,OAAOC,QAAP,MAAqB,+BAArB;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,cAAjC;AACA,OAAOC,MAAP,IAAiBC,mBAAjB,EAAsCC,WAAtC,QAAyD,WAAzD;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,SAASC,mBAAT,QAAoC,wCAApC;AACA,SAASC,oBAAT,EAA+BC,cAA/B,EAA+CC,WAA/C,EAA4DC,cAA5D,EAA4EC,YAA5E,QAAgG,qBAAhG;AACA,OAAOC,IAAP,MAAiB,SAAjB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA,IAAIC,iBAAiB,GAAGhB,QAAQ,CAAC,EAAD,EAAKI,mBAAmB,EAAxB,EAA4B;EAC1Da,KAAK,EAAEZ,WADmD;EAE1Da,YAAY,EAAEb,WAF4C;EAG1Dc,UAAU,EAAEX,SAAS,CAACY,KAHoC;EAI1DC,iBAAiB,EAAEb,SAAS,CAACc,MAJ6B;EAK1DC,eAAe,EAAEC,MALyC;EAM1DC,wBAAwB,EAAEjB,SAAS,CAACkB,IANsB,CAO1D;EACA;;AAR0D,CAA5B,CAAhC;;AAWA,IAAIC,YAAY,GAAG;EACjBC,IAAI,EAAE,eADW;EAEjBC,KAAK,EAAE7B,QAAQ,CAAC,EAAD,EAAKgB,iBAAL,EAAwB;IACrCc,SAAS,EAAEtB,SAAS,CAACuB,MADgB;IAErCC,UAAU,EAAExB,SAAS,CAACkB,IAAV,CAAeO,GAAf,CAAmB,KAAnB,CAFyB;IAGrCC,cAAc,EAAE1B,SAAS,CAACuB,MAAV,CAAiBE,GAAjB,CAAqB,UAArB,CAHqB;IAIrCE,oBAAoB,EAAE3B,SAAS,CAACuB,MAAV,CAAiBE,GAAjB,CAAqB,MAArB,CAJe;IAKrCG,SAAS,EAAE5B,SAAS,CAACkB,IALgB;IAMrCW,QAAQ,EAAE7B,SAAS,CAACkB,IANiB;IAOrCH,eAAe,EAAEf,SAAS,CAACuB,MAAV,CAAiBE,GAAjB,CAAqB,UAArB,CAPoB;IAQrCK,YAAY,EAAE9B,SAAS,CAAC+B,SAAV,CAAoB,CAAC/B,SAAS,CAACkB,IAAX,EAAiBlB,SAAS,CAACgC,IAA3B,CAApB,EAAsDP,GAAtD,CAA0D,KAA1D,CARuB;IASrCQ,wBAAwB,EAAEjC,SAAS,CAACkB,IAAV,CAAeO,GAAf,CAAmB,IAAnB;EATW,CAAxB,CAFE;EAajBhC,MAAM,EAAED,QAAQ,CAAC,EAAD,EAAKC,MAAL,EAAa;IAAE2B,IAAI,EAAE;EAAR,CAAb,CAbC;EAcjB1B,QAAQ,EAAEF,QAAQ,CAAC,EAAD,EAAKE,QAAL,EAAe;IAAE0B,IAAI,EAAE;EAAR,CAAf,CAdD;EAejBc,KAAK,EAAE;IACLC,IAAI,EAAE,OADD;IAELC,KAAK,EAAE;EAFF,CAfU;EAmBjBC,MAAM,EAAE;IACNC,cAAc,EAAE;MAAE,WAAW,SAASC,QAAT,GAAoB;QAC7C,OAAOtC,mBAAP;MACD;IAFa;EADV,CAnBS;EAwBjBuC,OAAO,EAAE,SAASA,OAAT,GAAmB;IAC1B,OAAO;MACLC,YAAY,EAAE,KAAKA;IADd,CAAP;EAGD,CA5BgB;EA8BjBC,OAAO,EAAE;IACPD,YAAY,EAAE,SAASA,YAAT,CAAsBE,GAAtB,EAA2B;MACvC,KAAKC,QAAL,GAAgBD,GAAhB;IACD,CAHM;IAIPE,eAAe,EAAE,SAASA,eAAT,GAA2B;MAC1C,IAAIC,CAAC,GAAG,KAAKC,cAAb;MACA,IAAIC,MAAM,GAAG,KAAKA,MAAlB;MAAA,IACIC,WAAW,GAAG,KAAKA,WADvB;MAGA,IAAIC,QAAQ,GAAG9C,WAAW,CAAC4C,MAAM,CAAC,SAAD,CAAP,CAA1B;MACA,IAAIG,OAAO,GAAGD,QAAQ,CAACE,MAAT,GAAkBF,QAAQ,CAAC,CAAD,CAA1B,GAAgCJ,CAAC,CAAChD,KAAD,EAAQ;QACrDuD,KAAK,EAAE;UAAEC,IAAI,EAAE;QAAR;MAD8C,CAAR,CAA/C;MAGA,OAAOR,CAAC,CACN/C,YADM,EAEN;QACEsD,KAAK,EAAE;UAAEJ,WAAW,EAAEA;QAAf;MADT,CAFM,EAKN,CAACE,OAAD,CALM,CAAR;IAOD,CApBM;IAqBPI,KAAK,EAAE,SAASA,KAAT,GAAiB;MACtB,IAAI,KAAKC,KAAL,CAAWC,MAAf,EAAuB;QACrB,KAAKD,KAAL,CAAWC,MAAX,CAAkBF,KAAlB;MACD;IACF,CAzBM;IA0BPG,IAAI,EAAE,SAASA,IAAT,GAAgB;MACpB,IAAI,KAAKF,KAAL,CAAWC,MAAf,EAAuB;QACrB,KAAKD,KAAL,CAAWC,MAAX,CAAkBC,IAAlB;MACD;IACF;EA9BM,CA9BQ;EA+DjBC,MAAM,EAAE,SAASA,MAAT,GAAkB;IACxB,IAAIC,IAAJ;;IAEA,IAAId,CAAC,GAAGe,SAAS,CAAC,CAAD,CAAjB;IACA,IAAIC,IAAI,GAAG,KAAKA,IAAhB;IAAA,IACIC,kBAAkB,GAAG,KAAKzC,SAD9B;IAAA,IAEIP,eAAe,GAAG,KAAKA,eAF3B;IAAA,IAGIJ,UAAU,GAAG,KAAKA,UAHtB;IAAA,IAIIqC,MAAM,GAAG,KAAKA,MAJlB;IAOA,IAAIgB,YAAY,GAAG,KAAK1B,cAAL,CAAoB0B,YAAvC;IACA,IAAI1C,SAAS,GAAG0C,YAAY,CAAC,QAAD,EAAWD,kBAAX,CAA5B;IAEA,IAAIE,GAAG,IAAIL,IAAI,GAAG,EAAP,EAAWrE,eAAe,CAACqE,IAAD,EAAOtC,SAAS,GAAG,KAAnB,EAA0BwC,IAAI,KAAK,OAAnC,CAA1B,EAAuEvE,eAAe,CAACqE,IAAD,EAAOtC,SAAS,GAAG,KAAnB,EAA0BwC,IAAI,KAAK,OAAnC,CAAtF,EAAmIvE,eAAe,CAACqE,IAAD,EAAOtC,SAAS,GAAG,cAAnB,EAAmC,IAAnC,CAAlJ,EAA4L/B,eAAe,CAACqE,IAAD,EAAOtC,SAAS,GAAG,gBAAnB,EAAqC,IAArC,CAA3M,EAAuPsC,IAA3P,CAAP;IAEA,IAAIM,OAAO,GAAG,KAAK,CAAnB;IACA,IAAIC,UAAU,GAAG/D,WAAW,CAAC4C,MAAM,CAACrC,UAAR,CAA5B;;IACA,IAAIwD,UAAU,CAACf,MAAf,EAAuB;MACrBc,OAAO,GAAGC,UAAV;IACD,CAFD,MAEO;MACLD,OAAO,GAAGvD,UAAU,GAAGA,UAAU,CAACyD,GAAX,CAAe,UAAUC,IAAV,EAAgB;QACpD,IAAIhE,cAAc,CAACgE,IAAD,CAAlB,EAA0B;UACxB,OAAOA,IAAP;QACD;;QACD,QAAQ,OAAOA,IAAP,KAAgB,WAAhB,GAA8B,WAA9B,GAA4C/E,OAAO,CAAC+E,IAAD,CAA3D;UACE,KAAK,QAAL;YACE,OAAOvB,CAAC,CACNrD,MADM,EAEN;cAAE6E,GAAG,EAAED;YAAP,CAFM,EAGN,CAACA,IAAD,CAHM,CAAR;;UAKF,KAAK,QAAL;YACE,OAAOvB,CAAC,CACNrD,MADM,EAEN;cAAE6E,GAAG,EAAED,IAAI,CAAC5D;YAAZ,CAFM,EAGN,CAAC4D,IAAI,CAACE,IAAN,CAHM,CAAR;;UAKF;YACE,MAAM,IAAIC,KAAJ,CAAU,oEAAV,CAAN;QAdJ;MAgBD,CApBsB,CAAH,GAoBf,EApBL;IAqBD;;IACD,IAAIC,WAAW,GAAG;MAChBpD,KAAK,EAAE7B,QAAQ,CAAC,EAAD,EAAKW,cAAc,CAAC,IAAD,CAAnB,EAA2B;QACxCuE,IAAI,EAAE/E,MAAM,CAACgF,+BAD2B;QAExC5D,eAAe,EAAEA,eAFuB;QAGxC8B,eAAe,EAAE,KAAKA,eAHkB;QAIxC+B,eAAe,EAAE1E,oBAAoB,CAAC,IAAD,EAAO,iBAAP,CAJG;QAKxC+C,WAAW,EAAE;MAL2B,CAA3B,CADC;MAQhB,SAASgB,GARO;MAShBtB,GAAG,EAAE,QATW;MAUhBkC,EAAE,EAAEvE,YAAY,CAAC,IAAD;IAVA,CAAlB;IAYA,OAAOwC,CAAC,CACNnD,MADM,EAEN8E,WAFM,EAGN,CAACP,OAAD,CAHM,CAAR;EAKD;AA3HgB,CAAnB;AA8HA;;AACA/C,YAAY,CAAC2D,OAAb,GAAuB,UAAUC,GAAV,EAAe;EACpCA,GAAG,CAACC,GAAJ,CAAQzE,IAAR;EACAwE,GAAG,CAACE,SAAJ,CAAc9D,YAAY,CAACC,IAA3B,EAAiCD,YAAjC;EACA4D,GAAG,CAACE,SAAJ,CAAc9D,YAAY,CAAC1B,MAAb,CAAoB2B,IAAlC,EAAwCD,YAAY,CAAC1B,MAArD;EACAsF,GAAG,CAACE,SAAJ,CAAc9D,YAAY,CAACzB,QAAb,CAAsB0B,IAApC,EAA0CD,YAAY,CAACzB,QAAvD;AACD,CALD;;AAOA,eAAeyB,YAAf"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport _extends from 'babel-runtime/helpers/extends';\nimport { generate, getSecondaryColor, isIconDefinition, log, MiniMap, withSuffix } from '../utils';\nvar twoToneColorPalette = {\n  primaryColor: '#333',\n  secondaryColor: '#E6E6E6'\n};\nvar Icon = {\n  name: 'AntdIcon',\n  props: ['type', 'primaryColor', 'secondaryColor'],\n  displayName: 'IconVue',\n  definitions: new MiniMap(),\n  data: function data() {\n    return {\n      twoToneColorPalette: twoToneColorPalette\n    };\n  },\n  add: function add() {\n    for (var _len = arguments.length, icons = Array(_len), _key = 0; _key < _len; _key++) {\n      icons[_key] = arguments[_key];\n    }\n\n    icons.forEach(function (icon) {\n      Icon.definitions.set(withSuffix(icon.name, icon.theme), icon);\n    });\n  },\n  clear: function clear() {\n    Icon.definitions.clear();\n  },\n  get: function get(key) {\n    var colors = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : twoToneColorPalette;\n\n    if (key) {\n      var target = Icon.definitions.get(key);\n\n      if (target && typeof target.icon === 'function') {\n        target = _extends({}, target, {\n          icon: target.icon(colors.primaryColor, colors.secondaryColor)\n        });\n      }\n\n      return target;\n    }\n  },\n  setTwoToneColors: function setTwoToneColors(_ref) {\n    var primaryColor = _ref.primaryColor,\n        secondaryColor = _ref.secondaryColor;\n    twoToneColorPalette.primaryColor = primaryColor;\n    twoToneColorPalette.secondaryColor = secondaryColor || getSecondaryColor(primaryColor);\n  },\n  getTwoToneColors: function getTwoToneColors() {\n    return _extends({}, twoToneColorPalette);\n  },\n  render: function render(h) {\n    var _$props = this.$props,\n        type = _$props.type,\n        primaryColor = _$props.primaryColor,\n        secondaryColor = _$props.secondaryColor;\n    var target = void 0;\n    var colors = twoToneColorPalette;\n\n    if (primaryColor) {\n      colors = {\n        primaryColor: primaryColor,\n        secondaryColor: secondaryColor || getSecondaryColor(primaryColor)\n      };\n    }\n\n    if (isIconDefinition(type)) {\n      target = type;\n    } else if (typeof type === 'string') {\n      target = Icon.get(type, colors);\n\n      if (!target) {\n        // log(`Could not find icon: ${type}`);\n        return null;\n      }\n    }\n\n    if (!target) {\n      log('type should be string or icon definiton, but got ' + type);\n      return null;\n    }\n\n    if (target && typeof target.icon === 'function') {\n      target = _extends({}, target, {\n        icon: target.icon(colors.primaryColor, colors.secondaryColor)\n      });\n    }\n\n    return generate(h, target.icon, 'svg-' + target.name, {\n      attrs: {\n        'data-icon': target.name,\n        width: '1em',\n        height: '1em',\n        fill: 'currentColor',\n        'aria-hidden': 'true'\n      },\n      on: this.$listeners\n    });\n  }\n};\n/* istanbul ignore next */\n\nIcon.install = function (Vue) {\n  Vue.component(Icon.name, Icon);\n};\n\nexport default Icon;","map":{"version":3,"names":["_extends","generate","getSecondaryColor","isIconDefinition","log","MiniMap","withSuffix","twoToneColorPalette","primaryColor","secondaryColor","Icon","name","props","displayName","definitions","data","add","_len","arguments","length","icons","Array","_key","forEach","icon","set","theme","clear","get","key","colors","undefined","target","setTwoToneColors","_ref","getTwoToneColors","render","h","_$props","$props","type","attrs","width","height","fill","on","$listeners","install","Vue","component"],"sources":["/Users/andreidev/domains/hakaton_cskz_front/node_modules/@ant-design/icons-vue/es/components/Icon.js"],"sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\nimport { generate, getSecondaryColor, isIconDefinition, log, MiniMap, withSuffix } from '../utils';\n\nvar twoToneColorPalette = {\n  primaryColor: '#333',\n  secondaryColor: '#E6E6E6'\n};\n\nvar Icon = {\n  name: 'AntdIcon',\n  props: ['type', 'primaryColor', 'secondaryColor'],\n  displayName: 'IconVue',\n  definitions: new MiniMap(),\n  data: function data() {\n    return {\n      twoToneColorPalette: twoToneColorPalette\n    };\n  },\n  add: function add() {\n    for (var _len = arguments.length, icons = Array(_len), _key = 0; _key < _len; _key++) {\n      icons[_key] = arguments[_key];\n    }\n\n    icons.forEach(function (icon) {\n      Icon.definitions.set(withSuffix(icon.name, icon.theme), icon);\n    });\n  },\n  clear: function clear() {\n    Icon.definitions.clear();\n  },\n  get: function get(key) {\n    var colors = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : twoToneColorPalette;\n\n    if (key) {\n      var target = Icon.definitions.get(key);\n      if (target && typeof target.icon === 'function') {\n        target = _extends({}, target, {\n          icon: target.icon(colors.primaryColor, colors.secondaryColor)\n        });\n      }\n      return target;\n    }\n  },\n  setTwoToneColors: function setTwoToneColors(_ref) {\n    var primaryColor = _ref.primaryColor,\n        secondaryColor = _ref.secondaryColor;\n\n    twoToneColorPalette.primaryColor = primaryColor;\n    twoToneColorPalette.secondaryColor = secondaryColor || getSecondaryColor(primaryColor);\n  },\n  getTwoToneColors: function getTwoToneColors() {\n    return _extends({}, twoToneColorPalette);\n  },\n  render: function render(h) {\n    var _$props = this.$props,\n        type = _$props.type,\n        primaryColor = _$props.primaryColor,\n        secondaryColor = _$props.secondaryColor;\n\n\n    var target = void 0;\n    var colors = twoToneColorPalette;\n    if (primaryColor) {\n      colors = {\n        primaryColor: primaryColor,\n        secondaryColor: secondaryColor || getSecondaryColor(primaryColor)\n      };\n    }\n    if (isIconDefinition(type)) {\n      target = type;\n    } else if (typeof type === 'string') {\n      target = Icon.get(type, colors);\n      if (!target) {\n        // log(`Could not find icon: ${type}`);\n        return null;\n      }\n    }\n    if (!target) {\n      log('type should be string or icon definiton, but got ' + type);\n      return null;\n    }\n    if (target && typeof target.icon === 'function') {\n      target = _extends({}, target, {\n        icon: target.icon(colors.primaryColor, colors.secondaryColor)\n      });\n    }\n    return generate(h, target.icon, 'svg-' + target.name, {\n      attrs: {\n        'data-icon': target.name,\n        width: '1em',\n        height: '1em',\n        fill: 'currentColor',\n        'aria-hidden': 'true'\n      },\n      on: this.$listeners\n    });\n  }\n};\n\n/* istanbul ignore next */\nIcon.install = function (Vue) {\n  Vue.component(Icon.name, Icon);\n};\n\nexport default Icon;"],"mappings":"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"},"metadata":{},"sourceType":"module"}
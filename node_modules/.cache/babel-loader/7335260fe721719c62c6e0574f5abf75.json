{"ast":null,"code":"import \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.split.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.is-array.js\";\nimport \"core-js/modules/es.map.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.reduce.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.string.substr.js\";\nimport _toConsumableArray from 'babel-runtime/helpers/toConsumableArray';\nimport _slicedToArray from 'babel-runtime/helpers/slicedToArray';\nimport _typeof from 'babel-runtime/helpers/typeof';\nimport _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\n/* eslint no-loop-func: 0*/\n\nimport warning from 'warning';\nimport omit from 'omit.js';\nimport TreeNode from './TreeNode';\nimport { getSlotOptions, getOptionProps } from '../../_util/props-util';\nvar DRAG_SIDE_RANGE = 0.25;\nvar DRAG_MIN_GAP = 2;\nvar onlyTreeNodeWarned = false;\nexport function warnOnlyTreeNode() {\n  if (onlyTreeNodeWarned) return;\n  onlyTreeNodeWarned = true;\n  warning(false, 'Tree only accept TreeNode as children.');\n}\nexport function arrDel(list, value) {\n  var clone = list.slice();\n  var index = clone.indexOf(value);\n\n  if (index >= 0) {\n    clone.splice(index, 1);\n  }\n\n  return clone;\n}\nexport function arrAdd(list, value) {\n  var clone = list.slice();\n\n  if (clone.indexOf(value) === -1) {\n    clone.push(value);\n  }\n\n  return clone;\n}\nexport function posToArr(pos) {\n  return pos.split('-');\n}\nexport function getPosition(level, index) {\n  return level + '-' + index;\n}\nexport function isTreeNode(node) {\n  return getSlotOptions(node).isTreeNode;\n}\nexport function getNodeChildren() {\n  var children = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  return children.filter(isTreeNode);\n}\nexport function isCheckDisabled(node) {\n  var _ref = getOptionProps(node) || {},\n      disabled = _ref.disabled,\n      disableCheckbox = _ref.disableCheckbox,\n      checkable = _ref.checkable;\n\n  return !!(disabled || disableCheckbox) || checkable === false;\n}\nexport function traverseTreeNodes(treeNodes, callback) {\n  function processNode(node, index, parent) {\n    var children = node ? node.componentOptions.children : treeNodes;\n    var pos = node ? getPosition(parent.pos, index) : 0; // Filter children\n\n    var childList = getNodeChildren(children); // Process node if is not root\n\n    if (node) {\n      var key = node.key;\n\n      if (!key && (key === undefined || key === null)) {\n        key = pos;\n      }\n\n      var data = {\n        node: node,\n        index: index,\n        pos: pos,\n        key: key,\n        parentPos: parent.node ? parent.pos : null\n      };\n      callback(data);\n    } // Process children node\n\n\n    childList.forEach(function (subNode, subIndex) {\n      processNode(subNode, subIndex, {\n        node: node,\n        pos: pos\n      });\n    });\n  }\n\n  processNode(null);\n}\n/**\n * Use `rc-util` `toArray` to get the children list which keeps the key.\n * And return single node if children is only one(This can avoid `key` missing check).\n */\n\nexport function mapChildren() {\n  var children = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var func = arguments[1];\n  var list = children.map(func);\n\n  if (list.length === 1) {\n    return list[0];\n  }\n\n  return list;\n}\nexport function getDragNodesKeys(treeNodes, node) {\n  var _getOptionProps = getOptionProps(node),\n      eventKey = _getOptionProps.eventKey,\n      pos = _getOptionProps.pos;\n\n  var dragNodesKeys = [];\n  traverseTreeNodes(treeNodes, function (_ref2) {\n    var key = _ref2.key;\n    dragNodesKeys.push(key);\n  });\n  dragNodesKeys.push(eventKey || pos);\n  return dragNodesKeys;\n}\nexport function calcDropPosition(event, treeNode) {\n  var clientY = event.clientY;\n\n  var _treeNode$$refs$selec = treeNode.$refs.selectHandle.getBoundingClientRect(),\n      top = _treeNode$$refs$selec.top,\n      bottom = _treeNode$$refs$selec.bottom,\n      height = _treeNode$$refs$selec.height;\n\n  var des = Math.max(height * DRAG_SIDE_RANGE, DRAG_MIN_GAP);\n\n  if (clientY <= top + des) {\n    return -1;\n  }\n\n  if (clientY >= bottom - des) {\n    return 1;\n  }\n\n  return 0;\n}\n/**\n * Return selectedKeys according with multiple prop\n * @param selectedKeys\n * @param props\n * @returns [string]\n */\n\nexport function calcSelectedKeys(selectedKeys, props) {\n  if (!selectedKeys) {\n    return undefined;\n  }\n\n  var multiple = props.multiple;\n\n  if (multiple) {\n    return selectedKeys.slice();\n  }\n\n  if (selectedKeys.length) {\n    return [selectedKeys[0]];\n  }\n\n  return selectedKeys;\n}\n/**\n * Since React internal will convert key to string,\n * we need do this to avoid `checkStrictly` use number match\n */\n// function keyListToString (keyList) {\n//   if (!keyList) return keyList\n//   return keyList.map(key => String(key))\n// }\n\nvar internalProcessProps = function internalProcessProps() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return {\n    props: omit(props, ['on', 'key', 'class', 'className', 'style']),\n    on: props.on || {},\n    'class': props['class'] || props.className,\n    style: props.style,\n    key: props.key\n  };\n};\n\nexport function convertDataToTree(h, treeData, processor) {\n  if (!treeData) return [];\n\n  var _ref3 = processor || {},\n      _ref3$processProps = _ref3.processProps,\n      processProps = _ref3$processProps === undefined ? internalProcessProps : _ref3$processProps;\n\n  var list = Array.isArray(treeData) ? treeData : [treeData];\n  return list.map(function (_ref4) {\n    var children = _ref4.children,\n        props = _objectWithoutProperties(_ref4, ['children']);\n\n    var childrenNodes = convertDataToTree(h, children, processor);\n    return h(TreeNode, processProps(props), [childrenNodes]);\n  });\n} // TODO: ========================= NEW LOGIC =========================\n\n/**\n * Calculate treeNodes entities. `processTreeEntity` is used for `rc-tree-select`\n * @param treeNodes\n * @param processTreeEntity  User can customize the entity\n */\n\nexport function convertTreeToEntities(treeNodes) {\n  var _ref5 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      initWrapper = _ref5.initWrapper,\n      processEntity = _ref5.processEntity,\n      onProcessFinished = _ref5.onProcessFinished;\n\n  var posEntities = new Map();\n  var keyEntities = new Map();\n  var wrapper = {\n    posEntities: posEntities,\n    keyEntities: keyEntities\n  };\n\n  if (initWrapper) {\n    wrapper = initWrapper(wrapper) || wrapper;\n  }\n\n  traverseTreeNodes(treeNodes, function (item) {\n    var node = item.node,\n        index = item.index,\n        pos = item.pos,\n        key = item.key,\n        parentPos = item.parentPos;\n    var entity = {\n      node: node,\n      index: index,\n      key: key,\n      pos: pos\n    };\n    posEntities.set(pos, entity);\n    keyEntities.set(key, entity); // Fill children\n\n    entity.parent = posEntities.get(parentPos);\n\n    if (entity.parent) {\n      entity.parent.children = entity.parent.children || [];\n      entity.parent.children.push(entity);\n    }\n\n    if (processEntity) {\n      processEntity(entity, wrapper);\n    }\n  });\n\n  if (onProcessFinished) {\n    onProcessFinished(wrapper);\n  }\n\n  return wrapper;\n}\n/**\n * Parse `checkedKeys` to { checkedKeys, halfCheckedKeys } style\n */\n\nexport function parseCheckedKeys(keys) {\n  if (!keys) {\n    return null;\n  } // Convert keys to object format\n\n\n  var keyProps = void 0;\n\n  if (Array.isArray(keys)) {\n    // [Legacy] Follow the api doc\n    keyProps = {\n      checkedKeys: keys,\n      halfCheckedKeys: undefined\n    };\n  } else if ((typeof keys === 'undefined' ? 'undefined' : _typeof(keys)) === 'object') {\n    keyProps = {\n      checkedKeys: keys.checked || undefined,\n      halfCheckedKeys: keys.halfChecked || undefined\n    };\n  } else {\n    warning(false, '`checkedKeys` is not an array or an object');\n    return null;\n  } // keyProps.checkedKeys = keyListToString(keyProps.checkedKeys)\n  // keyProps.halfCheckedKeys = keyListToString(keyProps.halfCheckedKeys)\n\n\n  return keyProps;\n}\n/**\n * Conduct check state by the keyList. It will conduct up & from the provided key.\n * If the conduct path reach the disabled or already checked / unchecked node will stop conduct.\n * @param keyList       list of keys\n * @param isCheck       is check the node or not\n * @param keyEntities   parsed by `convertTreeToEntities` function in Tree\n * @param checkStatus   Can pass current checked status for process (usually for uncheck operation)\n * @returns {{checkedKeys: [], halfCheckedKeys: []}}\n */\n\nexport function conductCheck(keyList, isCheck, keyEntities) {\n  var checkStatus = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var checkedKeys = new Map();\n  var halfCheckedKeys = new Map(); // Record the key has some child checked (include child half checked)\n\n  (checkStatus.checkedKeys || []).forEach(function (key) {\n    checkedKeys.set(key, true);\n  });\n  (checkStatus.halfCheckedKeys || []).forEach(function (key) {\n    halfCheckedKeys.set(key, true);\n  }); // Conduct up\n\n  function conductUp(key) {\n    if (checkedKeys.get(key) === isCheck) return;\n    var entity = keyEntities.get(key);\n    if (!entity) return;\n    var children = entity.children,\n        parent = entity.parent,\n        node = entity.node;\n    if (isCheckDisabled(node)) return; // Check child node checked status\n\n    var everyChildChecked = true;\n    var someChildChecked = false; // Child checked or half checked\n\n    (children || []).filter(function (child) {\n      return !isCheckDisabled(child.node);\n    }).forEach(function (_ref6) {\n      var childKey = _ref6.key;\n      var childChecked = checkedKeys.get(childKey);\n      var childHalfChecked = halfCheckedKeys.get(childKey);\n      if (childChecked || childHalfChecked) someChildChecked = true;\n      if (!childChecked) everyChildChecked = false;\n    }); // Update checked status\n\n    if (isCheck) {\n      checkedKeys.set(key, everyChildChecked);\n    } else {\n      checkedKeys.set(key, false);\n    }\n\n    halfCheckedKeys.set(key, someChildChecked);\n\n    if (parent) {\n      conductUp(parent.key);\n    }\n  } // Conduct down\n\n\n  function conductDown(key) {\n    if (checkedKeys.get(key) === isCheck) return;\n    var entity = keyEntities.get(key);\n    if (!entity) return;\n    var children = entity.children,\n        node = entity.node;\n    if (isCheckDisabled(node)) return;\n    checkedKeys.set(key, isCheck);\n    (children || []).forEach(function (child) {\n      conductDown(child.key);\n    });\n  }\n\n  function conduct(key) {\n    var entity = keyEntities.get(key);\n\n    if (!entity) {\n      warning(false, '\\'' + key + '\\' does not exist in the tree.');\n      return;\n    }\n\n    var children = entity.children,\n        parent = entity.parent,\n        node = entity.node;\n    checkedKeys.set(key, isCheck);\n    if (isCheckDisabled(node)) return; // Conduct down\n\n    (children || []).filter(function (child) {\n      return !isCheckDisabled(child.node);\n    }).forEach(function (child) {\n      conductDown(child.key);\n    }); // Conduct up\n\n    if (parent) {\n      conductUp(parent.key);\n    }\n  }\n\n  (keyList || []).forEach(function (key) {\n    conduct(key);\n  });\n  var checkedKeyList = [];\n  var halfCheckedKeyList = []; // Fill checked list\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = checkedKeys[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var _ref7 = _step.value;\n\n      var _ref8 = _slicedToArray(_ref7, 2);\n\n      var key = _ref8[0];\n      var value = _ref8[1];\n\n      if (value) {\n        checkedKeyList.push(key);\n      }\n    } // Fill half checked list\n\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator['return']) {\n        _iterator['return']();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  var _iteratorNormalCompletion2 = true;\n  var _didIteratorError2 = false;\n  var _iteratorError2 = undefined;\n\n  try {\n    for (var _iterator2 = halfCheckedKeys[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n      var _ref9 = _step2.value;\n\n      var _ref10 = _slicedToArray(_ref9, 2);\n\n      var _key = _ref10[0];\n      var _value = _ref10[1];\n\n      if (!checkedKeys.get(_key) && _value) {\n        halfCheckedKeyList.push(_key);\n      }\n    }\n  } catch (err) {\n    _didIteratorError2 = true;\n    _iteratorError2 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion2 && _iterator2['return']) {\n        _iterator2['return']();\n      }\n    } finally {\n      if (_didIteratorError2) {\n        throw _iteratorError2;\n      }\n    }\n  }\n\n  return {\n    checkedKeys: checkedKeyList,\n    halfCheckedKeys: halfCheckedKeyList\n  };\n}\n/**\n * If user use `autoExpandParent` we should get the list of parent node\n * @param keyList\n * @param keyEntities\n */\n\nexport function conductExpandParent(keyList, keyEntities) {\n  var expandedKeys = new Map();\n\n  function conductUp(key) {\n    if (expandedKeys.get(key)) return;\n    var entity = keyEntities.get(key);\n    if (!entity) return;\n    expandedKeys.set(key, true);\n    var parent = entity.parent,\n        node = entity.node;\n    var props = getOptionProps(node);\n    if (props && props.disabled) return;\n\n    if (parent) {\n      conductUp(parent.key);\n    }\n  }\n\n  (keyList || []).forEach(function (key) {\n    conductUp(key);\n  });\n  return [].concat(_toConsumableArray(expandedKeys.keys()));\n}\n/**\n * Returns only the data- and aria- key/value pairs\n * @param {object} props\n */\n\nexport function getDataAndAria(props) {\n  return Object.keys(props).reduce(function (prev, key) {\n    if (key.substr(0, 5) === 'data-' || key.substr(0, 5) === 'aria-') {\n      prev[key] = props[key];\n    }\n\n    return prev;\n  }, {});\n}","map":{"version":3,"names":["_toConsumableArray","_slicedToArray","_typeof","_objectWithoutProperties","warning","omit","TreeNode","getSlotOptions","getOptionProps","DRAG_SIDE_RANGE","DRAG_MIN_GAP","onlyTreeNodeWarned","warnOnlyTreeNode","arrDel","list","value","clone","slice","index","indexOf","splice","arrAdd","push","posToArr","pos","split","getPosition","level","isTreeNode","node","getNodeChildren","children","arguments","length","undefined","filter","isCheckDisabled","_ref","disabled","disableCheckbox","checkable","traverseTreeNodes","treeNodes","callback","processNode","parent","componentOptions","childList","key","data","parentPos","forEach","subNode","subIndex","mapChildren","func","map","getDragNodesKeys","_getOptionProps","eventKey","dragNodesKeys","_ref2","calcDropPosition","event","treeNode","clientY","_treeNode$$refs$selec","$refs","selectHandle","getBoundingClientRect","top","bottom","height","des","Math","max","calcSelectedKeys","selectedKeys","props","multiple","internalProcessProps","on","className","style","convertDataToTree","h","treeData","processor","_ref3","_ref3$processProps","processProps","Array","isArray","_ref4","childrenNodes","convertTreeToEntities","_ref5","initWrapper","processEntity","onProcessFinished","posEntities","Map","keyEntities","wrapper","item","entity","set","get","parseCheckedKeys","keys","keyProps","checkedKeys","halfCheckedKeys","checked","halfChecked","conductCheck","keyList","isCheck","checkStatus","conductUp","everyChildChecked","someChildChecked","child","_ref6","childKey","childChecked","childHalfChecked","conductDown","conduct","checkedKeyList","halfCheckedKeyList","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","Symbol","iterator","_step","next","done","_ref7","_ref8","err","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","_ref9","_ref10","_key","_value","conductExpandParent","expandedKeys","concat","getDataAndAria","Object","reduce","prev","substr"],"sources":["/Users/andreidev/domains/hakaton_cskz_front/node_modules/ant-design-vue/es/vc-tree/src/util.js"],"sourcesContent":["import _toConsumableArray from 'babel-runtime/helpers/toConsumableArray';\nimport _slicedToArray from 'babel-runtime/helpers/slicedToArray';\nimport _typeof from 'babel-runtime/helpers/typeof';\nimport _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\n/* eslint no-loop-func: 0*/\nimport warning from 'warning';\nimport omit from 'omit.js';\nimport TreeNode from './TreeNode';\nimport { getSlotOptions, getOptionProps } from '../../_util/props-util';\nvar DRAG_SIDE_RANGE = 0.25;\nvar DRAG_MIN_GAP = 2;\n\nvar onlyTreeNodeWarned = false;\n\nexport function warnOnlyTreeNode() {\n  if (onlyTreeNodeWarned) return;\n\n  onlyTreeNodeWarned = true;\n  warning(false, 'Tree only accept TreeNode as children.');\n}\n\nexport function arrDel(list, value) {\n  var clone = list.slice();\n  var index = clone.indexOf(value);\n  if (index >= 0) {\n    clone.splice(index, 1);\n  }\n  return clone;\n}\n\nexport function arrAdd(list, value) {\n  var clone = list.slice();\n  if (clone.indexOf(value) === -1) {\n    clone.push(value);\n  }\n  return clone;\n}\n\nexport function posToArr(pos) {\n  return pos.split('-');\n}\n\nexport function getPosition(level, index) {\n  return level + '-' + index;\n}\n\nexport function isTreeNode(node) {\n  return getSlotOptions(node).isTreeNode;\n}\n\nexport function getNodeChildren() {\n  var children = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n  return children.filter(isTreeNode);\n}\n\nexport function isCheckDisabled(node) {\n  var _ref = getOptionProps(node) || {},\n      disabled = _ref.disabled,\n      disableCheckbox = _ref.disableCheckbox,\n      checkable = _ref.checkable;\n\n  return !!(disabled || disableCheckbox) || checkable === false;\n}\n\nexport function traverseTreeNodes(treeNodes, callback) {\n  function processNode(node, index, parent) {\n    var children = node ? node.componentOptions.children : treeNodes;\n    var pos = node ? getPosition(parent.pos, index) : 0;\n\n    // Filter children\n    var childList = getNodeChildren(children);\n\n    // Process node if is not root\n    if (node) {\n      var key = node.key;\n      if (!key && (key === undefined || key === null)) {\n        key = pos;\n      }\n      var data = {\n        node: node,\n        index: index,\n        pos: pos,\n        key: key,\n        parentPos: parent.node ? parent.pos : null\n      };\n      callback(data);\n    }\n\n    // Process children node\n    childList.forEach(function (subNode, subIndex) {\n      processNode(subNode, subIndex, { node: node, pos: pos });\n    });\n  }\n\n  processNode(null);\n}\n\n/**\n * Use `rc-util` `toArray` to get the children list which keeps the key.\n * And return single node if children is only one(This can avoid `key` missing check).\n */\nexport function mapChildren() {\n  var children = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var func = arguments[1];\n\n  var list = children.map(func);\n  if (list.length === 1) {\n    return list[0];\n  }\n  return list;\n}\n\nexport function getDragNodesKeys(treeNodes, node) {\n  var _getOptionProps = getOptionProps(node),\n      eventKey = _getOptionProps.eventKey,\n      pos = _getOptionProps.pos;\n\n  var dragNodesKeys = [];\n\n  traverseTreeNodes(treeNodes, function (_ref2) {\n    var key = _ref2.key;\n\n    dragNodesKeys.push(key);\n  });\n  dragNodesKeys.push(eventKey || pos);\n  return dragNodesKeys;\n}\n\nexport function calcDropPosition(event, treeNode) {\n  var clientY = event.clientY;\n\n  var _treeNode$$refs$selec = treeNode.$refs.selectHandle.getBoundingClientRect(),\n      top = _treeNode$$refs$selec.top,\n      bottom = _treeNode$$refs$selec.bottom,\n      height = _treeNode$$refs$selec.height;\n\n  var des = Math.max(height * DRAG_SIDE_RANGE, DRAG_MIN_GAP);\n\n  if (clientY <= top + des) {\n    return -1;\n  }\n  if (clientY >= bottom - des) {\n    return 1;\n  }\n  return 0;\n}\n\n/**\n * Return selectedKeys according with multiple prop\n * @param selectedKeys\n * @param props\n * @returns [string]\n */\nexport function calcSelectedKeys(selectedKeys, props) {\n  if (!selectedKeys) {\n    return undefined;\n  }\n\n  var multiple = props.multiple;\n\n  if (multiple) {\n    return selectedKeys.slice();\n  }\n\n  if (selectedKeys.length) {\n    return [selectedKeys[0]];\n  }\n  return selectedKeys;\n}\n\n/**\n * Since React internal will convert key to string,\n * we need do this to avoid `checkStrictly` use number match\n */\n// function keyListToString (keyList) {\n//   if (!keyList) return keyList\n//   return keyList.map(key => String(key))\n// }\n\nvar internalProcessProps = function internalProcessProps() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  return {\n    props: omit(props, ['on', 'key', 'class', 'className', 'style']),\n    on: props.on || {},\n    'class': props['class'] || props.className,\n    style: props.style,\n    key: props.key\n  };\n};\nexport function convertDataToTree(h, treeData, processor) {\n  if (!treeData) return [];\n\n  var _ref3 = processor || {},\n      _ref3$processProps = _ref3.processProps,\n      processProps = _ref3$processProps === undefined ? internalProcessProps : _ref3$processProps;\n\n  var list = Array.isArray(treeData) ? treeData : [treeData];\n  return list.map(function (_ref4) {\n    var children = _ref4.children,\n        props = _objectWithoutProperties(_ref4, ['children']);\n\n    var childrenNodes = convertDataToTree(h, children, processor);\n    return h(\n      TreeNode,\n      processProps(props),\n      [childrenNodes]\n    );\n  });\n}\n\n// TODO: ========================= NEW LOGIC =========================\n/**\n * Calculate treeNodes entities. `processTreeEntity` is used for `rc-tree-select`\n * @param treeNodes\n * @param processTreeEntity  User can customize the entity\n */\nexport function convertTreeToEntities(treeNodes) {\n  var _ref5 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      initWrapper = _ref5.initWrapper,\n      processEntity = _ref5.processEntity,\n      onProcessFinished = _ref5.onProcessFinished;\n\n  var posEntities = new Map();\n  var keyEntities = new Map();\n  var wrapper = {\n    posEntities: posEntities,\n    keyEntities: keyEntities\n  };\n\n  if (initWrapper) {\n    wrapper = initWrapper(wrapper) || wrapper;\n  }\n\n  traverseTreeNodes(treeNodes, function (item) {\n    var node = item.node,\n        index = item.index,\n        pos = item.pos,\n        key = item.key,\n        parentPos = item.parentPos;\n\n    var entity = { node: node, index: index, key: key, pos: pos };\n\n    posEntities.set(pos, entity);\n    keyEntities.set(key, entity);\n\n    // Fill children\n    entity.parent = posEntities.get(parentPos);\n    if (entity.parent) {\n      entity.parent.children = entity.parent.children || [];\n      entity.parent.children.push(entity);\n    }\n\n    if (processEntity) {\n      processEntity(entity, wrapper);\n    }\n  });\n\n  if (onProcessFinished) {\n    onProcessFinished(wrapper);\n  }\n\n  return wrapper;\n}\n\n/**\n * Parse `checkedKeys` to { checkedKeys, halfCheckedKeys } style\n */\nexport function parseCheckedKeys(keys) {\n  if (!keys) {\n    return null;\n  }\n\n  // Convert keys to object format\n  var keyProps = void 0;\n  if (Array.isArray(keys)) {\n    // [Legacy] Follow the api doc\n    keyProps = {\n      checkedKeys: keys,\n      halfCheckedKeys: undefined\n    };\n  } else if ((typeof keys === 'undefined' ? 'undefined' : _typeof(keys)) === 'object') {\n    keyProps = {\n      checkedKeys: keys.checked || undefined,\n      halfCheckedKeys: keys.halfChecked || undefined\n    };\n  } else {\n    warning(false, '`checkedKeys` is not an array or an object');\n    return null;\n  }\n\n  // keyProps.checkedKeys = keyListToString(keyProps.checkedKeys)\n  // keyProps.halfCheckedKeys = keyListToString(keyProps.halfCheckedKeys)\n\n  return keyProps;\n}\n\n/**\n * Conduct check state by the keyList. It will conduct up & from the provided key.\n * If the conduct path reach the disabled or already checked / unchecked node will stop conduct.\n * @param keyList       list of keys\n * @param isCheck       is check the node or not\n * @param keyEntities   parsed by `convertTreeToEntities` function in Tree\n * @param checkStatus   Can pass current checked status for process (usually for uncheck operation)\n * @returns {{checkedKeys: [], halfCheckedKeys: []}}\n */\nexport function conductCheck(keyList, isCheck, keyEntities) {\n  var checkStatus = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n  var checkedKeys = new Map();\n  var halfCheckedKeys = new Map(); // Record the key has some child checked (include child half checked)\n\n  (checkStatus.checkedKeys || []).forEach(function (key) {\n    checkedKeys.set(key, true);\n  });\n\n  (checkStatus.halfCheckedKeys || []).forEach(function (key) {\n    halfCheckedKeys.set(key, true);\n  });\n\n  // Conduct up\n  function conductUp(key) {\n    if (checkedKeys.get(key) === isCheck) return;\n\n    var entity = keyEntities.get(key);\n    if (!entity) return;\n\n    var children = entity.children,\n        parent = entity.parent,\n        node = entity.node;\n\n\n    if (isCheckDisabled(node)) return;\n\n    // Check child node checked status\n    var everyChildChecked = true;\n    var someChildChecked = false; // Child checked or half checked\n\n    (children || []).filter(function (child) {\n      return !isCheckDisabled(child.node);\n    }).forEach(function (_ref6) {\n      var childKey = _ref6.key;\n\n      var childChecked = checkedKeys.get(childKey);\n      var childHalfChecked = halfCheckedKeys.get(childKey);\n\n      if (childChecked || childHalfChecked) someChildChecked = true;\n      if (!childChecked) everyChildChecked = false;\n    });\n\n    // Update checked status\n    if (isCheck) {\n      checkedKeys.set(key, everyChildChecked);\n    } else {\n      checkedKeys.set(key, false);\n    }\n    halfCheckedKeys.set(key, someChildChecked);\n\n    if (parent) {\n      conductUp(parent.key);\n    }\n  }\n\n  // Conduct down\n  function conductDown(key) {\n    if (checkedKeys.get(key) === isCheck) return;\n\n    var entity = keyEntities.get(key);\n    if (!entity) return;\n\n    var children = entity.children,\n        node = entity.node;\n\n\n    if (isCheckDisabled(node)) return;\n\n    checkedKeys.set(key, isCheck);\n\n    (children || []).forEach(function (child) {\n      conductDown(child.key);\n    });\n  }\n\n  function conduct(key) {\n    var entity = keyEntities.get(key);\n\n    if (!entity) {\n      warning(false, '\\'' + key + '\\' does not exist in the tree.');\n      return;\n    }\n    var children = entity.children,\n        parent = entity.parent,\n        node = entity.node;\n\n    checkedKeys.set(key, isCheck);\n\n    if (isCheckDisabled(node)) return;\n\n    // Conduct down\n    (children || []).filter(function (child) {\n      return !isCheckDisabled(child.node);\n    }).forEach(function (child) {\n      conductDown(child.key);\n    });\n\n    // Conduct up\n    if (parent) {\n      conductUp(parent.key);\n    }\n  }\n\n  (keyList || []).forEach(function (key) {\n    conduct(key);\n  });\n\n  var checkedKeyList = [];\n  var halfCheckedKeyList = [];\n\n  // Fill checked list\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = checkedKeys[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var _ref7 = _step.value;\n\n      var _ref8 = _slicedToArray(_ref7, 2);\n\n      var key = _ref8[0];\n      var value = _ref8[1];\n\n      if (value) {\n        checkedKeyList.push(key);\n      }\n    }\n\n    // Fill half checked list\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator['return']) {\n        _iterator['return']();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  var _iteratorNormalCompletion2 = true;\n  var _didIteratorError2 = false;\n  var _iteratorError2 = undefined;\n\n  try {\n    for (var _iterator2 = halfCheckedKeys[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n      var _ref9 = _step2.value;\n\n      var _ref10 = _slicedToArray(_ref9, 2);\n\n      var _key = _ref10[0];\n      var _value = _ref10[1];\n\n      if (!checkedKeys.get(_key) && _value) {\n        halfCheckedKeyList.push(_key);\n      }\n    }\n  } catch (err) {\n    _didIteratorError2 = true;\n    _iteratorError2 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion2 && _iterator2['return']) {\n        _iterator2['return']();\n      }\n    } finally {\n      if (_didIteratorError2) {\n        throw _iteratorError2;\n      }\n    }\n  }\n\n  return {\n    checkedKeys: checkedKeyList,\n    halfCheckedKeys: halfCheckedKeyList\n  };\n}\n\n/**\n * If user use `autoExpandParent` we should get the list of parent node\n * @param keyList\n * @param keyEntities\n */\nexport function conductExpandParent(keyList, keyEntities) {\n  var expandedKeys = new Map();\n\n  function conductUp(key) {\n    if (expandedKeys.get(key)) return;\n\n    var entity = keyEntities.get(key);\n    if (!entity) return;\n\n    expandedKeys.set(key, true);\n\n    var parent = entity.parent,\n        node = entity.node;\n\n    var props = getOptionProps(node);\n    if (props && props.disabled) return;\n\n    if (parent) {\n      conductUp(parent.key);\n    }\n  }\n\n  (keyList || []).forEach(function (key) {\n    conductUp(key);\n  });\n\n  return [].concat(_toConsumableArray(expandedKeys.keys()));\n}\n\n/**\n * Returns only the data- and aria- key/value pairs\n * @param {object} props\n */\nexport function getDataAndAria(props) {\n  return Object.keys(props).reduce(function (prev, key) {\n    if (key.substr(0, 5) === 'data-' || key.substr(0, 5) === 'aria-') {\n      prev[key] = props[key];\n    }\n    return prev;\n  }, {});\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}
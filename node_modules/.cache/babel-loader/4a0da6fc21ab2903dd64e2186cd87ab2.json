{"ast":null,"code":"import \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.map.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/web.timers.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport _defineProperty from 'babel-runtime/helpers/defineProperty';\nimport _toConsumableArray from 'babel-runtime/helpers/toConsumableArray';\nimport _extends from 'babel-runtime/helpers/extends';\nimport PropTypes from '../../_util/vue-types';\nimport classNames from 'classnames';\nimport warning from 'warning';\nimport { hasProp, initDefaultProps, getOptionProps, getSlots } from '../../_util/props-util';\nimport { cloneElement } from '../../_util/vnode';\nimport BaseMixin from '../../_util/BaseMixin';\nimport proxyComponent from '../../_util/proxyComponent';\nimport { convertTreeToEntities, convertDataToTree, getPosition, getDragNodesKeys, parseCheckedKeys, conductExpandParent, calcSelectedKeys, calcDropPosition, arrAdd, arrDel, posToArr, mapChildren, conductCheck, warnOnlyTreeNode } from './util';\n/**\n * Thought we still use `cloneElement` to pass `key`,\n * other props can pass with context for future refactor.\n */\n\nfunction getWatch() {\n  var keys = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var watch = {};\n  keys.forEach(function (k) {\n    watch[k] = function () {\n      this.needSyncKeys[k] = true;\n    };\n  });\n  return watch;\n}\n\nvar Tree = {\n  name: 'Tree',\n  mixins: [BaseMixin],\n  props: initDefaultProps({\n    prefixCls: PropTypes.string,\n    tabIndex: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    children: PropTypes.any,\n    treeData: PropTypes.array,\n    // Generate treeNode by children\n    showLine: PropTypes.bool,\n    showIcon: PropTypes.bool,\n    icon: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n    focusable: PropTypes.bool,\n    selectable: PropTypes.bool,\n    disabled: PropTypes.bool,\n    multiple: PropTypes.bool,\n    checkable: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]),\n    checkStrictly: PropTypes.bool,\n    draggable: PropTypes.bool,\n    defaultExpandParent: PropTypes.bool,\n    autoExpandParent: PropTypes.bool,\n    defaultExpandAll: PropTypes.bool,\n    defaultExpandedKeys: PropTypes.array,\n    expandedKeys: PropTypes.array,\n    defaultCheckedKeys: PropTypes.array,\n    checkedKeys: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\n    defaultSelectedKeys: PropTypes.array,\n    selectedKeys: PropTypes.array,\n    // onClick: PropTypes.func,\n    // onDoubleClick: PropTypes.func,\n    // onExpand: PropTypes.func,\n    // onCheck: PropTypes.func,\n    // onSelect: PropTypes.func,\n    loadData: PropTypes.func,\n    loadedKeys: PropTypes.array,\n    // onMouseEnter: PropTypes.func,\n    // onMouseLeave: PropTypes.func,\n    // onRightClick: PropTypes.func,\n    // onDragStart: PropTypes.func,\n    // onDragEnter: PropTypes.func,\n    // onDragOver: PropTypes.func,\n    // onDragLeave: PropTypes.func,\n    // onDragEnd: PropTypes.func,\n    // onDrop: PropTypes.func,\n    filterTreeNode: PropTypes.func,\n    openTransitionName: PropTypes.string,\n    openAnimation: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    switcherIcon: PropTypes.any,\n    _propsSymbol: PropTypes.any\n  }, {\n    prefixCls: 'rc-tree',\n    showLine: false,\n    showIcon: true,\n    selectable: true,\n    multiple: false,\n    checkable: false,\n    disabled: false,\n    checkStrictly: false,\n    draggable: false,\n    defaultExpandParent: true,\n    autoExpandParent: false,\n    defaultExpandAll: false,\n    defaultExpandedKeys: [],\n    defaultCheckedKeys: [],\n    defaultSelectedKeys: []\n  }),\n  data: function data() {\n    warning(this.$props.__propsSymbol__, 'must pass __propsSymbol__');\n    warning(this.$props.children, 'please use children prop replace slots.default');\n    this.needSyncKeys = {};\n    this.domTreeNodes = {};\n    var state = {\n      _posEntities: new Map(),\n      _keyEntities: new Map(),\n      _expandedKeys: [],\n      _selectedKeys: [],\n      _checkedKeys: [],\n      _halfCheckedKeys: [],\n      _loadedKeys: [],\n      _loadingKeys: [],\n      _treeNode: [],\n      _prevProps: null,\n      _dragOverNodeKey: '',\n      _dropPosition: null,\n      _dragNodesKeys: []\n    };\n    return _extends({}, state, this.getDerivedState(getOptionProps(this), state));\n  },\n  provide: function provide() {\n    return {\n      vcTree: this\n    };\n  },\n  watch: _extends({}, getWatch(['treeData', 'children', 'expandedKeys', 'autoExpandParent', 'selectedKeys', 'checkedKeys', 'loadedKeys']), {\n    __propsSymbol__: function __propsSymbol__() {\n      this.setState(this.getDerivedState(getOptionProps(this), this.$data));\n      this.needSyncKeys = {};\n    }\n  }),\n  methods: {\n    getDerivedState: function getDerivedState(props, prevState) {\n      var _prevProps = prevState._prevProps;\n      var newState = {\n        _prevProps: _extends({}, props)\n      };\n      var self = this;\n\n      function needSync(name) {\n        return !_prevProps && name in props || _prevProps && self.needSyncKeys[name];\n      } // ================== Tree Node ==================\n\n\n      var treeNode = null; // Check if `treeData` or `children` changed and save into the state.\n\n      if (needSync('treeData')) {\n        treeNode = convertDataToTree(this.$createElement, props.treeData);\n      } else if (needSync('children')) {\n        treeNode = props.children;\n      } // Tree support filter function which will break the tree structure in the vdm.\n      // We cache the treeNodes in state so that we can return the treeNode in event trigger.\n\n\n      if (treeNode) {\n        newState._treeNode = treeNode; // Calculate the entities data for quick match\n\n        var entitiesMap = convertTreeToEntities(treeNode);\n        newState._keyEntities = entitiesMap.keyEntities;\n      }\n\n      var keyEntities = newState._keyEntities || prevState._keyEntities; // ================ expandedKeys =================\n\n      if (needSync('expandedKeys') || _prevProps && needSync('autoExpandParent')) {\n        newState._expandedKeys = props.autoExpandParent || !_prevProps && props.defaultExpandParent ? conductExpandParent(props.expandedKeys, keyEntities) : props.expandedKeys;\n      } else if (!_prevProps && props.defaultExpandAll) {\n        newState._expandedKeys = [].concat(_toConsumableArray(keyEntities.keys()));\n      } else if (!_prevProps && props.defaultExpandedKeys) {\n        newState._expandedKeys = props.autoExpandParent || props.defaultExpandParent ? conductExpandParent(props.defaultExpandedKeys, keyEntities) : props.defaultExpandedKeys;\n      } // ================ selectedKeys =================\n\n\n      if (props.selectable) {\n        if (needSync('selectedKeys')) {\n          newState._selectedKeys = calcSelectedKeys(props.selectedKeys, props);\n        } else if (!_prevProps && props.defaultSelectedKeys) {\n          newState._selectedKeys = calcSelectedKeys(props.defaultSelectedKeys, props);\n        }\n      } // ================= checkedKeys =================\n\n\n      if (props.checkable) {\n        var checkedKeyEntity = void 0;\n\n        if (needSync('checkedKeys')) {\n          checkedKeyEntity = parseCheckedKeys(props.checkedKeys) || {};\n        } else if (!_prevProps && props.defaultCheckedKeys) {\n          checkedKeyEntity = parseCheckedKeys(props.defaultCheckedKeys) || {};\n        } else if (treeNode) {\n          // If treeNode changed, we also need check it\n          checkedKeyEntity = parseCheckedKeys(props.checkedKeys) || {\n            checkedKeys: prevState._checkedKeys,\n            halfCheckedKeys: prevState._halfCheckedKeys\n          };\n        }\n\n        if (checkedKeyEntity) {\n          var _checkedKeyEntity = checkedKeyEntity,\n              _checkedKeyEntity$che = _checkedKeyEntity.checkedKeys,\n              checkedKeys = _checkedKeyEntity$che === undefined ? [] : _checkedKeyEntity$che,\n              _checkedKeyEntity$hal = _checkedKeyEntity.halfCheckedKeys,\n              halfCheckedKeys = _checkedKeyEntity$hal === undefined ? [] : _checkedKeyEntity$hal;\n\n          if (!props.checkStrictly) {\n            var conductKeys = conductCheck(checkedKeys, true, keyEntities);\n            checkedKeys = conductKeys.checkedKeys;\n            halfCheckedKeys = conductKeys.halfCheckedKeys;\n          }\n\n          newState._checkedKeys = checkedKeys;\n          newState._halfCheckedKeys = halfCheckedKeys;\n        }\n      } // ================= loadedKeys ==================\n\n\n      if (needSync('loadedKeys')) {\n        newState._loadedKeys = props.loadedKeys;\n      }\n\n      return newState;\n    },\n    onNodeDragStart: function onNodeDragStart(event, node) {\n      var _expandedKeys = this.$data._expandedKeys;\n      var eventKey = node.eventKey;\n      var children = getSlots(node)['default'];\n      this.dragNode = node;\n      this.setState({\n        _dragNodesKeys: getDragNodesKeys(typeof children === 'function' ? children() : children, node),\n        _expandedKeys: arrDel(_expandedKeys, eventKey)\n      });\n\n      this.__emit('dragstart', {\n        event: event,\n        node: node\n      });\n    },\n\n    /**\n     * [Legacy] Select handler is less small than node,\n     * so that this will trigger when drag enter node or select handler.\n     * This is a little tricky if customize css without padding.\n     * Better for use mouse move event to refresh drag state.\n     * But let's just keep it to avoid event trigger logic change.\n     */\n    onNodeDragEnter: function onNodeDragEnter(event, node) {\n      var _this = this;\n\n      var expandedKeys = this.$data._expandedKeys;\n      var pos = node.pos,\n          eventKey = node.eventKey;\n      if (!this.dragNode || !node.$refs.selectHandle) return;\n      var dropPosition = calcDropPosition(event, node); // Skip if drag node is self\n\n      if (this.dragNode.eventKey === eventKey && dropPosition === 0) {\n        this.setState({\n          _dragOverNodeKey: '',\n          _dropPosition: null\n        });\n        return;\n      } // Ref: https://github.com/react-component/tree/issues/132\n      // Add timeout to let onDragLevel fire before onDragEnter,\n      // so that we can clean drag props for onDragLeave node.\n      // Macro task for this:\n      // https://html.spec.whatwg.org/multipage/webappapis.html#clean-up-after-running-script\n\n\n      setTimeout(function () {\n        // Update drag over node\n        _this.setState({\n          _dragOverNodeKey: eventKey,\n          _dropPosition: dropPosition\n        }); // Side effect for delay drag\n\n\n        if (!_this.delayedDragEnterLogic) {\n          _this.delayedDragEnterLogic = {};\n        }\n\n        Object.keys(_this.delayedDragEnterLogic).forEach(function (key) {\n          clearTimeout(_this.delayedDragEnterLogic[key]);\n        });\n        _this.delayedDragEnterLogic[pos] = setTimeout(function () {\n          var newExpandedKeys = arrAdd(expandedKeys, eventKey);\n\n          if (!hasProp(_this, 'expandedKeys')) {\n            _this.setState({\n              _expandedKeys: newExpandedKeys\n            });\n          }\n\n          _this.__emit('dragenter', {\n            event: event,\n            node: node,\n            expandedKeys: newExpandedKeys\n          });\n        }, 400);\n      }, 0);\n    },\n    onNodeDragOver: function onNodeDragOver(event, node) {\n      var eventKey = node.eventKey;\n      var _$data = this.$data,\n          _dragOverNodeKey = _$data._dragOverNodeKey,\n          _dropPosition = _$data._dropPosition; // Update drag position\n\n      if (this.dragNode && eventKey === _dragOverNodeKey && node.$refs.selectHandle) {\n        var dropPosition = calcDropPosition(event, node);\n        if (dropPosition === _dropPosition) return;\n        this.setState({\n          _dropPosition: dropPosition\n        });\n      }\n\n      this.__emit('dragover', {\n        event: event,\n        node: node\n      });\n    },\n    onNodeDragLeave: function onNodeDragLeave(event, node) {\n      this.setState({\n        _dragOverNodeKey: ''\n      });\n\n      this.__emit('dragleave', {\n        event: event,\n        node: node\n      });\n    },\n    onNodeDragEnd: function onNodeDragEnd(event, node) {\n      this.setState({\n        _dragOverNodeKey: ''\n      });\n\n      this.__emit('dragend', {\n        event: event,\n        node: node\n      });\n\n      this.dragNode = null;\n    },\n    onNodeDrop: function onNodeDrop(event, node) {\n      var _$data2 = this.$data,\n          _$data2$_dragNodesKey = _$data2._dragNodesKeys,\n          _dragNodesKeys = _$data2$_dragNodesKey === undefined ? [] : _$data2$_dragNodesKey,\n          _dropPosition = _$data2._dropPosition;\n\n      var eventKey = node.eventKey,\n          pos = node.pos;\n      this.setState({\n        _dragOverNodeKey: ''\n      });\n\n      if (_dragNodesKeys.indexOf(eventKey) !== -1) {\n        warning(false, \"Can not drop to dragNode(include it's children node)\");\n        return;\n      }\n\n      var posArr = posToArr(pos);\n      var dropResult = {\n        event: event,\n        node: node,\n        dragNode: this.dragNode,\n        dragNodesKeys: _dragNodesKeys.slice(),\n        dropPosition: _dropPosition + Number(posArr[posArr.length - 1]),\n        dropToGap: false\n      };\n\n      if (_dropPosition !== 0) {\n        dropResult.dropToGap = true;\n      }\n\n      this.__emit('drop', dropResult);\n\n      this.dragNode = null;\n    },\n    onNodeClick: function onNodeClick(e, treeNode) {\n      this.__emit('click', e, treeNode);\n    },\n    onNodeDoubleClick: function onNodeDoubleClick(e, treeNode) {\n      this.__emit('dblclick', e, treeNode);\n    },\n    onNodeSelect: function onNodeSelect(e, treeNode) {\n      var selectedKeys = this.$data._selectedKeys;\n      var keyEntities = this.$data._keyEntities;\n      var multiple = this.$props.multiple;\n\n      var _getOptionProps = getOptionProps(treeNode),\n          selected = _getOptionProps.selected,\n          eventKey = _getOptionProps.eventKey;\n\n      var targetSelected = !selected; // Update selected keys\n\n      if (!targetSelected) {\n        selectedKeys = arrDel(selectedKeys, eventKey);\n      } else if (!multiple) {\n        selectedKeys = [eventKey];\n      } else {\n        selectedKeys = arrAdd(selectedKeys, eventKey);\n      } // [Legacy] Not found related usage in doc or upper libs\n\n\n      var selectedNodes = selectedKeys.map(function (key) {\n        var entity = keyEntities.get(key);\n        if (!entity) return null;\n        return entity.node;\n      }).filter(function (node) {\n        return node;\n      });\n      this.setUncontrolledState({\n        _selectedKeys: selectedKeys\n      });\n      var eventObj = {\n        event: 'select',\n        selected: targetSelected,\n        node: treeNode,\n        selectedNodes: selectedNodes,\n        nativeEvent: e\n      };\n\n      this.__emit('update:selectedKeys', selectedKeys);\n\n      this.__emit('select', selectedKeys, eventObj);\n    },\n    onNodeCheck: function onNodeCheck(e, treeNode, checked) {\n      var _$data3 = this.$data,\n          keyEntities = _$data3._keyEntities,\n          oriCheckedKeys = _$data3._checkedKeys,\n          oriHalfCheckedKeys = _$data3._halfCheckedKeys;\n      var checkStrictly = this.$props.checkStrictly;\n\n      var _getOptionProps2 = getOptionProps(treeNode),\n          eventKey = _getOptionProps2.eventKey; // Prepare trigger arguments\n\n\n      var checkedObj = void 0;\n      var eventObj = {\n        event: 'check',\n        node: treeNode,\n        checked: checked,\n        nativeEvent: e\n      };\n\n      if (checkStrictly) {\n        var checkedKeys = checked ? arrAdd(oriCheckedKeys, eventKey) : arrDel(oriCheckedKeys, eventKey);\n        var halfCheckedKeys = arrDel(oriHalfCheckedKeys, eventKey);\n        checkedObj = {\n          checked: checkedKeys,\n          halfChecked: halfCheckedKeys\n        };\n        eventObj.checkedNodes = checkedKeys.map(function (key) {\n          return keyEntities.get(key);\n        }).filter(function (entity) {\n          return entity;\n        }).map(function (entity) {\n          return entity.node;\n        });\n        this.setUncontrolledState({\n          _checkedKeys: checkedKeys\n        });\n      } else {\n        var _conductCheck = conductCheck([eventKey], checked, keyEntities, {\n          checkedKeys: oriCheckedKeys,\n          halfCheckedKeys: oriHalfCheckedKeys\n        }),\n            _checkedKeys = _conductCheck.checkedKeys,\n            _halfCheckedKeys = _conductCheck.halfCheckedKeys;\n\n        checkedObj = _checkedKeys; // [Legacy] This is used for `rc-tree-select`\n\n        eventObj.checkedNodes = [];\n        eventObj.checkedNodesPositions = [];\n        eventObj.halfCheckedKeys = _halfCheckedKeys;\n\n        _checkedKeys.forEach(function (key) {\n          var entity = keyEntities.get(key);\n          if (!entity) return;\n          var node = entity.node,\n              pos = entity.pos;\n          eventObj.checkedNodes.push(node);\n          eventObj.checkedNodesPositions.push({\n            node: node,\n            pos: pos\n          });\n        });\n\n        this.setUncontrolledState({\n          _checkedKeys: _checkedKeys,\n          _halfCheckedKeys: _halfCheckedKeys\n        });\n      }\n\n      this.__emit('check', checkedObj, eventObj);\n    },\n    onNodeLoad: function onNodeLoad(treeNode) {\n      var _this2 = this;\n\n      return new Promise(function (resolve) {\n        // We need to get the latest state of loading/loaded keys\n        _this2.setState(function (_ref) {\n          var _ref$_loadedKeys = _ref._loadedKeys,\n              loadedKeys = _ref$_loadedKeys === undefined ? [] : _ref$_loadedKeys,\n              _ref$_loadingKeys = _ref._loadingKeys,\n              loadingKeys = _ref$_loadingKeys === undefined ? [] : _ref$_loadingKeys;\n          var loadData = _this2.$props.loadData;\n\n          var _getOptionProps3 = getOptionProps(treeNode),\n              eventKey = _getOptionProps3.eventKey;\n\n          if (!loadData || loadedKeys.indexOf(eventKey) !== -1 || loadingKeys.indexOf(eventKey) !== -1) {\n            return {};\n          } // Process load data\n\n\n          var promise = loadData(treeNode);\n          promise.then(function () {\n            var _$data4 = _this2.$data,\n                currentLoadedKeys = _$data4._loadedKeys,\n                currentLoadingKeys = _$data4._loadingKeys;\n            var newLoadedKeys = arrAdd(currentLoadedKeys, eventKey);\n            var newLoadingKeys = arrDel(currentLoadingKeys, eventKey); // onLoad should trigger before internal setState to avoid `loadData` trigger twice.\n            // https://github.com/ant-design/ant-design/issues/12464\n\n            _this2.__emit('load', newLoadedKeys, {\n              event: 'load',\n              node: treeNode\n            });\n\n            _this2.setUncontrolledState({\n              _loadedKeys: newLoadedKeys\n            });\n\n            _this2.setState({\n              _loadingKeys: newLoadingKeys\n            });\n\n            resolve();\n          });\n          return {\n            _loadingKeys: arrAdd(loadingKeys, eventKey)\n          };\n        });\n      });\n    },\n    onNodeExpand: function onNodeExpand(e, treeNode) {\n      var _this3 = this;\n\n      var expandedKeys = this.$data._expandedKeys;\n      var loadData = this.$props.loadData;\n\n      var _getOptionProps4 = getOptionProps(treeNode),\n          eventKey = _getOptionProps4.eventKey,\n          expanded = _getOptionProps4.expanded; // Update selected keys\n\n\n      var index = expandedKeys.indexOf(eventKey);\n      var targetExpanded = !expanded;\n      warning(expanded && index !== -1 || !expanded && index === -1, 'Expand state not sync with index check');\n\n      if (targetExpanded) {\n        expandedKeys = arrAdd(expandedKeys, eventKey);\n      } else {\n        expandedKeys = arrDel(expandedKeys, eventKey);\n      }\n\n      this.setUncontrolledState({\n        _expandedKeys: expandedKeys\n      });\n\n      this.__emit('expand', expandedKeys, {\n        node: treeNode,\n        expanded: targetExpanded,\n        nativeEvent: e\n      });\n\n      this.__emit('update:expandedKeys', expandedKeys); // Async Load data\n\n\n      if (targetExpanded && loadData) {\n        var loadPromise = this.onNodeLoad(treeNode);\n        return loadPromise ? loadPromise.then(function () {\n          // [Legacy] Refresh logic\n          _this3.setUncontrolledState({\n            _expandedKeys: expandedKeys\n          });\n        }) : null;\n      }\n\n      return null;\n    },\n    onNodeMouseEnter: function onNodeMouseEnter(event, node) {\n      this.__emit('mouseenter', {\n        event: event,\n        node: node\n      });\n    },\n    onNodeMouseLeave: function onNodeMouseLeave(event, node) {\n      this.__emit('mouseleave', {\n        event: event,\n        node: node\n      });\n    },\n    onNodeContextMenu: function onNodeContextMenu(event, node) {\n      event.preventDefault();\n\n      this.__emit('rightClick', {\n        event: event,\n        node: node\n      });\n    },\n\n    /**\n     * Only update the value which is not in props\n     */\n    setUncontrolledState: function setUncontrolledState(state) {\n      var needSync = false;\n      var newState = {};\n      var props = getOptionProps(this);\n      Object.keys(state).forEach(function (name) {\n        if (name.replace('_', '') in props) return;\n        needSync = true;\n        newState[name] = state[name];\n      });\n\n      if (needSync) {\n        this.setState(newState);\n      }\n    },\n    registerTreeNode: function registerTreeNode(key, node) {\n      if (node) {\n        this.domTreeNodes[key] = node;\n      } else {\n        delete this.domTreeNodes[key];\n      }\n    },\n    isKeyChecked: function isKeyChecked(key) {\n      var _$data$_checkedKeys = this.$data._checkedKeys,\n          checkedKeys = _$data$_checkedKeys === undefined ? [] : _$data$_checkedKeys;\n      return checkedKeys.indexOf(key) !== -1;\n    },\n\n    /**\n     * [Legacy] Original logic use `key` as tracking clue.\n     * We have to use `cloneElement` to pass `key`.\n     */\n    renderTreeNode: function renderTreeNode(child, index) {\n      var level = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      var _$data5 = this.$data,\n          keyEntities = _$data5._keyEntities,\n          _$data5$_expandedKeys = _$data5._expandedKeys,\n          expandedKeys = _$data5$_expandedKeys === undefined ? [] : _$data5$_expandedKeys,\n          _$data5$_selectedKeys = _$data5._selectedKeys,\n          selectedKeys = _$data5$_selectedKeys === undefined ? [] : _$data5$_selectedKeys,\n          _$data5$_halfCheckedK = _$data5._halfCheckedKeys,\n          halfCheckedKeys = _$data5$_halfCheckedK === undefined ? [] : _$data5$_halfCheckedK,\n          _$data5$_loadedKeys = _$data5._loadedKeys,\n          loadedKeys = _$data5$_loadedKeys === undefined ? [] : _$data5$_loadedKeys,\n          _$data5$_loadingKeys = _$data5._loadingKeys,\n          loadingKeys = _$data5$_loadingKeys === undefined ? [] : _$data5$_loadingKeys,\n          dragOverNodeKey = _$data5._dragOverNodeKey,\n          dropPosition = _$data5._dropPosition;\n      var pos = getPosition(level, index);\n      var key = child.key;\n\n      if (!key && (key === undefined || key === null)) {\n        key = pos;\n      }\n\n      if (!keyEntities.get(key)) {\n        warnOnlyTreeNode();\n        return null;\n      }\n\n      return cloneElement(child, {\n        props: {\n          eventKey: key,\n          expanded: expandedKeys.indexOf(key) !== -1,\n          selected: selectedKeys.indexOf(key) !== -1,\n          loaded: loadedKeys.indexOf(key) !== -1,\n          loading: loadingKeys.indexOf(key) !== -1,\n          checked: this.isKeyChecked(key),\n          halfChecked: halfCheckedKeys.indexOf(key) !== -1,\n          pos: pos,\n          // [Legacy] Drag props\n          dragOver: dragOverNodeKey === key && dropPosition === 0,\n          dragOverGapTop: dragOverNodeKey === key && dropPosition === -1,\n          dragOverGapBottom: dragOverNodeKey === key && dropPosition === 1\n        },\n        key: key\n      });\n    }\n  },\n  render: function render() {\n    var _this4 = this;\n\n    var h = arguments[0];\n    var treeNode = this.$data._treeNode;\n    var _$props = this.$props,\n        prefixCls = _$props.prefixCls,\n        focusable = _$props.focusable,\n        showLine = _$props.showLine,\n        _$props$tabIndex = _$props.tabIndex,\n        tabIndex = _$props$tabIndex === undefined ? 0 : _$props$tabIndex;\n    return h('ul', {\n      'class': classNames(prefixCls, _defineProperty({}, prefixCls + '-show-line', showLine)),\n      attrs: {\n        role: 'tree',\n        unselectable: 'on',\n        tabIndex: focusable ? tabIndex : null\n      }\n    }, [mapChildren(treeNode, function (node, index) {\n      return _this4.renderTreeNode(node, index);\n    })]);\n  }\n};\nexport { Tree };\nexport default proxyComponent(Tree);","map":{"version":3,"names":["_defineProperty","_toConsumableArray","_extends","PropTypes","classNames","warning","hasProp","initDefaultProps","getOptionProps","getSlots","cloneElement","BaseMixin","proxyComponent","convertTreeToEntities","convertDataToTree","getPosition","getDragNodesKeys","parseCheckedKeys","conductExpandParent","calcSelectedKeys","calcDropPosition","arrAdd","arrDel","posToArr","mapChildren","conductCheck","warnOnlyTreeNode","getWatch","keys","arguments","length","undefined","watch","forEach","k","needSyncKeys","Tree","name","mixins","props","prefixCls","string","tabIndex","oneOfType","number","children","any","treeData","array","showLine","bool","showIcon","icon","object","func","focusable","selectable","disabled","multiple","checkable","checkStrictly","draggable","defaultExpandParent","autoExpandParent","defaultExpandAll","defaultExpandedKeys","expandedKeys","defaultCheckedKeys","checkedKeys","defaultSelectedKeys","selectedKeys","loadData","loadedKeys","filterTreeNode","openTransitionName","openAnimation","switcherIcon","_propsSymbol","data","$props","__propsSymbol__","domTreeNodes","state","_posEntities","Map","_keyEntities","_expandedKeys","_selectedKeys","_checkedKeys","_halfCheckedKeys","_loadedKeys","_loadingKeys","_treeNode","_prevProps","_dragOverNodeKey","_dropPosition","_dragNodesKeys","getDerivedState","provide","vcTree","setState","$data","methods","prevState","newState","self","needSync","treeNode","$createElement","entitiesMap","keyEntities","concat","checkedKeyEntity","halfCheckedKeys","_checkedKeyEntity","_checkedKeyEntity$che","_checkedKeyEntity$hal","conductKeys","onNodeDragStart","event","node","eventKey","dragNode","__emit","onNodeDragEnter","_this","pos","$refs","selectHandle","dropPosition","setTimeout","delayedDragEnterLogic","Object","key","clearTimeout","newExpandedKeys","onNodeDragOver","_$data","onNodeDragLeave","onNodeDragEnd","onNodeDrop","_$data2","_$data2$_dragNodesKey","indexOf","posArr","dropResult","dragNodesKeys","slice","Number","dropToGap","onNodeClick","e","onNodeDoubleClick","onNodeSelect","_getOptionProps","selected","targetSelected","selectedNodes","map","entity","get","filter","setUncontrolledState","eventObj","nativeEvent","onNodeCheck","checked","_$data3","oriCheckedKeys","oriHalfCheckedKeys","_getOptionProps2","checkedObj","halfChecked","checkedNodes","_conductCheck","checkedNodesPositions","push","onNodeLoad","_this2","Promise","resolve","_ref","_ref$_loadedKeys","_ref$_loadingKeys","loadingKeys","_getOptionProps3","promise","then","_$data4","currentLoadedKeys","currentLoadingKeys","newLoadedKeys","newLoadingKeys","onNodeExpand","_this3","_getOptionProps4","expanded","index","targetExpanded","loadPromise","onNodeMouseEnter","onNodeMouseLeave","onNodeContextMenu","preventDefault","replace","registerTreeNode","isKeyChecked","_$data$_checkedKeys","renderTreeNode","child","level","_$data5","_$data5$_expandedKeys","_$data5$_selectedKeys","_$data5$_halfCheckedK","_$data5$_loadedKeys","_$data5$_loadingKeys","dragOverNodeKey","loaded","loading","dragOver","dragOverGapTop","dragOverGapBottom","render","_this4","h","_$props","_$props$tabIndex","attrs","role","unselectable"],"sources":["/Users/andreidev/domains/hakaton_cskz_front/node_modules/ant-design-vue/es/vc-tree/src/Tree.js"],"sourcesContent":["import _defineProperty from 'babel-runtime/helpers/defineProperty';\nimport _toConsumableArray from 'babel-runtime/helpers/toConsumableArray';\nimport _extends from 'babel-runtime/helpers/extends';\nimport PropTypes from '../../_util/vue-types';\nimport classNames from 'classnames';\nimport warning from 'warning';\nimport { hasProp, initDefaultProps, getOptionProps, getSlots } from '../../_util/props-util';\nimport { cloneElement } from '../../_util/vnode';\nimport BaseMixin from '../../_util/BaseMixin';\nimport proxyComponent from '../../_util/proxyComponent';\nimport { convertTreeToEntities, convertDataToTree, getPosition, getDragNodesKeys, parseCheckedKeys, conductExpandParent, calcSelectedKeys, calcDropPosition, arrAdd, arrDel, posToArr, mapChildren, conductCheck, warnOnlyTreeNode } from './util';\n\n/**\n * Thought we still use `cloneElement` to pass `key`,\n * other props can pass with context for future refactor.\n */\n\nfunction getWatch() {\n  var keys = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n  var watch = {};\n  keys.forEach(function (k) {\n    watch[k] = function () {\n      this.needSyncKeys[k] = true;\n    };\n  });\n  return watch;\n}\n\nvar Tree = {\n  name: 'Tree',\n  mixins: [BaseMixin],\n  props: initDefaultProps({\n    prefixCls: PropTypes.string,\n    tabIndex: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    children: PropTypes.any,\n    treeData: PropTypes.array, // Generate treeNode by children\n    showLine: PropTypes.bool,\n    showIcon: PropTypes.bool,\n    icon: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n    focusable: PropTypes.bool,\n    selectable: PropTypes.bool,\n    disabled: PropTypes.bool,\n    multiple: PropTypes.bool,\n    checkable: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]),\n    checkStrictly: PropTypes.bool,\n    draggable: PropTypes.bool,\n    defaultExpandParent: PropTypes.bool,\n    autoExpandParent: PropTypes.bool,\n    defaultExpandAll: PropTypes.bool,\n    defaultExpandedKeys: PropTypes.array,\n    expandedKeys: PropTypes.array,\n    defaultCheckedKeys: PropTypes.array,\n    checkedKeys: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\n    defaultSelectedKeys: PropTypes.array,\n    selectedKeys: PropTypes.array,\n    // onClick: PropTypes.func,\n    // onDoubleClick: PropTypes.func,\n    // onExpand: PropTypes.func,\n    // onCheck: PropTypes.func,\n    // onSelect: PropTypes.func,\n    loadData: PropTypes.func,\n    loadedKeys: PropTypes.array,\n    // onMouseEnter: PropTypes.func,\n    // onMouseLeave: PropTypes.func,\n    // onRightClick: PropTypes.func,\n    // onDragStart: PropTypes.func,\n    // onDragEnter: PropTypes.func,\n    // onDragOver: PropTypes.func,\n    // onDragLeave: PropTypes.func,\n    // onDragEnd: PropTypes.func,\n    // onDrop: PropTypes.func,\n    filterTreeNode: PropTypes.func,\n    openTransitionName: PropTypes.string,\n    openAnimation: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    switcherIcon: PropTypes.any,\n    _propsSymbol: PropTypes.any\n  }, {\n    prefixCls: 'rc-tree',\n    showLine: false,\n    showIcon: true,\n    selectable: true,\n    multiple: false,\n    checkable: false,\n    disabled: false,\n    checkStrictly: false,\n    draggable: false,\n    defaultExpandParent: true,\n    autoExpandParent: false,\n    defaultExpandAll: false,\n    defaultExpandedKeys: [],\n    defaultCheckedKeys: [],\n    defaultSelectedKeys: []\n  }),\n\n  data: function data() {\n    warning(this.$props.__propsSymbol__, 'must pass __propsSymbol__');\n    warning(this.$props.children, 'please use children prop replace slots.default');\n    this.needSyncKeys = {};\n    this.domTreeNodes = {};\n    var state = {\n      _posEntities: new Map(),\n      _keyEntities: new Map(),\n      _expandedKeys: [],\n      _selectedKeys: [],\n      _checkedKeys: [],\n      _halfCheckedKeys: [],\n      _loadedKeys: [],\n      _loadingKeys: [],\n      _treeNode: [],\n      _prevProps: null,\n      _dragOverNodeKey: '',\n      _dropPosition: null,\n      _dragNodesKeys: []\n    };\n    return _extends({}, state, this.getDerivedState(getOptionProps(this), state));\n  },\n  provide: function provide() {\n    return {\n      vcTree: this\n    };\n  },\n\n\n  watch: _extends({}, getWatch(['treeData', 'children', 'expandedKeys', 'autoExpandParent', 'selectedKeys', 'checkedKeys', 'loadedKeys']), {\n    __propsSymbol__: function __propsSymbol__() {\n      this.setState(this.getDerivedState(getOptionProps(this), this.$data));\n      this.needSyncKeys = {};\n    }\n  }),\n\n  methods: {\n    getDerivedState: function getDerivedState(props, prevState) {\n      var _prevProps = prevState._prevProps;\n\n      var newState = {\n        _prevProps: _extends({}, props)\n      };\n      var self = this;\n      function needSync(name) {\n        return !_prevProps && name in props || _prevProps && self.needSyncKeys[name];\n      }\n\n      // ================== Tree Node ==================\n      var treeNode = null;\n\n      // Check if `treeData` or `children` changed and save into the state.\n      if (needSync('treeData')) {\n        treeNode = convertDataToTree(this.$createElement, props.treeData);\n      } else if (needSync('children')) {\n        treeNode = props.children;\n      }\n\n      // Tree support filter function which will break the tree structure in the vdm.\n      // We cache the treeNodes in state so that we can return the treeNode in event trigger.\n      if (treeNode) {\n        newState._treeNode = treeNode;\n\n        // Calculate the entities data for quick match\n        var entitiesMap = convertTreeToEntities(treeNode);\n        newState._keyEntities = entitiesMap.keyEntities;\n      }\n\n      var keyEntities = newState._keyEntities || prevState._keyEntities;\n\n      // ================ expandedKeys =================\n      if (needSync('expandedKeys') || _prevProps && needSync('autoExpandParent')) {\n        newState._expandedKeys = props.autoExpandParent || !_prevProps && props.defaultExpandParent ? conductExpandParent(props.expandedKeys, keyEntities) : props.expandedKeys;\n      } else if (!_prevProps && props.defaultExpandAll) {\n        newState._expandedKeys = [].concat(_toConsumableArray(keyEntities.keys()));\n      } else if (!_prevProps && props.defaultExpandedKeys) {\n        newState._expandedKeys = props.autoExpandParent || props.defaultExpandParent ? conductExpandParent(props.defaultExpandedKeys, keyEntities) : props.defaultExpandedKeys;\n      }\n\n      // ================ selectedKeys =================\n      if (props.selectable) {\n        if (needSync('selectedKeys')) {\n          newState._selectedKeys = calcSelectedKeys(props.selectedKeys, props);\n        } else if (!_prevProps && props.defaultSelectedKeys) {\n          newState._selectedKeys = calcSelectedKeys(props.defaultSelectedKeys, props);\n        }\n      }\n\n      // ================= checkedKeys =================\n      if (props.checkable) {\n        var checkedKeyEntity = void 0;\n\n        if (needSync('checkedKeys')) {\n          checkedKeyEntity = parseCheckedKeys(props.checkedKeys) || {};\n        } else if (!_prevProps && props.defaultCheckedKeys) {\n          checkedKeyEntity = parseCheckedKeys(props.defaultCheckedKeys) || {};\n        } else if (treeNode) {\n          // If treeNode changed, we also need check it\n          checkedKeyEntity = parseCheckedKeys(props.checkedKeys) || {\n            checkedKeys: prevState._checkedKeys,\n            halfCheckedKeys: prevState._halfCheckedKeys\n          };\n        }\n\n        if (checkedKeyEntity) {\n          var _checkedKeyEntity = checkedKeyEntity,\n              _checkedKeyEntity$che = _checkedKeyEntity.checkedKeys,\n              checkedKeys = _checkedKeyEntity$che === undefined ? [] : _checkedKeyEntity$che,\n              _checkedKeyEntity$hal = _checkedKeyEntity.halfCheckedKeys,\n              halfCheckedKeys = _checkedKeyEntity$hal === undefined ? [] : _checkedKeyEntity$hal;\n\n\n          if (!props.checkStrictly) {\n            var conductKeys = conductCheck(checkedKeys, true, keyEntities);\n            checkedKeys = conductKeys.checkedKeys;\n            halfCheckedKeys = conductKeys.halfCheckedKeys;\n          }\n\n          newState._checkedKeys = checkedKeys;\n          newState._halfCheckedKeys = halfCheckedKeys;\n        }\n      }\n      // ================= loadedKeys ==================\n      if (needSync('loadedKeys')) {\n        newState._loadedKeys = props.loadedKeys;\n      }\n\n      return newState;\n    },\n    onNodeDragStart: function onNodeDragStart(event, node) {\n      var _expandedKeys = this.$data._expandedKeys;\n      var eventKey = node.eventKey;\n\n      var children = getSlots(node)['default'];\n      this.dragNode = node;\n\n      this.setState({\n        _dragNodesKeys: getDragNodesKeys(typeof children === 'function' ? children() : children, node),\n        _expandedKeys: arrDel(_expandedKeys, eventKey)\n      });\n      this.__emit('dragstart', { event: event, node: node });\n    },\n\n\n    /**\n     * [Legacy] Select handler is less small than node,\n     * so that this will trigger when drag enter node or select handler.\n     * This is a little tricky if customize css without padding.\n     * Better for use mouse move event to refresh drag state.\n     * But let's just keep it to avoid event trigger logic change.\n     */\n    onNodeDragEnter: function onNodeDragEnter(event, node) {\n      var _this = this;\n\n      var expandedKeys = this.$data._expandedKeys;\n      var pos = node.pos,\n          eventKey = node.eventKey;\n\n\n      if (!this.dragNode || !node.$refs.selectHandle) return;\n\n      var dropPosition = calcDropPosition(event, node);\n\n      // Skip if drag node is self\n      if (this.dragNode.eventKey === eventKey && dropPosition === 0) {\n        this.setState({\n          _dragOverNodeKey: '',\n          _dropPosition: null\n        });\n        return;\n      }\n\n      // Ref: https://github.com/react-component/tree/issues/132\n      // Add timeout to let onDragLevel fire before onDragEnter,\n      // so that we can clean drag props for onDragLeave node.\n      // Macro task for this:\n      // https://html.spec.whatwg.org/multipage/webappapis.html#clean-up-after-running-script\n      setTimeout(function () {\n        // Update drag over node\n        _this.setState({\n          _dragOverNodeKey: eventKey,\n          _dropPosition: dropPosition\n        });\n\n        // Side effect for delay drag\n        if (!_this.delayedDragEnterLogic) {\n          _this.delayedDragEnterLogic = {};\n        }\n        Object.keys(_this.delayedDragEnterLogic).forEach(function (key) {\n          clearTimeout(_this.delayedDragEnterLogic[key]);\n        });\n        _this.delayedDragEnterLogic[pos] = setTimeout(function () {\n          var newExpandedKeys = arrAdd(expandedKeys, eventKey);\n          if (!hasProp(_this, 'expandedKeys')) {\n            _this.setState({\n              _expandedKeys: newExpandedKeys\n            });\n          }\n          _this.__emit('dragenter', { event: event, node: node, expandedKeys: newExpandedKeys });\n        }, 400);\n      }, 0);\n    },\n    onNodeDragOver: function onNodeDragOver(event, node) {\n      var eventKey = node.eventKey;\n      var _$data = this.$data,\n          _dragOverNodeKey = _$data._dragOverNodeKey,\n          _dropPosition = _$data._dropPosition;\n      // Update drag position\n\n      if (this.dragNode && eventKey === _dragOverNodeKey && node.$refs.selectHandle) {\n        var dropPosition = calcDropPosition(event, node);\n\n        if (dropPosition === _dropPosition) return;\n\n        this.setState({\n          _dropPosition: dropPosition\n        });\n      }\n      this.__emit('dragover', { event: event, node: node });\n    },\n    onNodeDragLeave: function onNodeDragLeave(event, node) {\n      this.setState({\n        _dragOverNodeKey: ''\n      });\n      this.__emit('dragleave', { event: event, node: node });\n    },\n    onNodeDragEnd: function onNodeDragEnd(event, node) {\n      this.setState({\n        _dragOverNodeKey: ''\n      });\n      this.__emit('dragend', { event: event, node: node });\n      this.dragNode = null;\n    },\n    onNodeDrop: function onNodeDrop(event, node) {\n      var _$data2 = this.$data,\n          _$data2$_dragNodesKey = _$data2._dragNodesKeys,\n          _dragNodesKeys = _$data2$_dragNodesKey === undefined ? [] : _$data2$_dragNodesKey,\n          _dropPosition = _$data2._dropPosition;\n\n      var eventKey = node.eventKey,\n          pos = node.pos;\n\n\n      this.setState({\n        _dragOverNodeKey: ''\n      });\n\n      if (_dragNodesKeys.indexOf(eventKey) !== -1) {\n        warning(false, \"Can not drop to dragNode(include it's children node)\");\n        return;\n      }\n\n      var posArr = posToArr(pos);\n\n      var dropResult = {\n        event: event,\n        node: node,\n        dragNode: this.dragNode,\n        dragNodesKeys: _dragNodesKeys.slice(),\n        dropPosition: _dropPosition + Number(posArr[posArr.length - 1]),\n        dropToGap: false\n      };\n\n      if (_dropPosition !== 0) {\n        dropResult.dropToGap = true;\n      }\n      this.__emit('drop', dropResult);\n      this.dragNode = null;\n    },\n    onNodeClick: function onNodeClick(e, treeNode) {\n      this.__emit('click', e, treeNode);\n    },\n    onNodeDoubleClick: function onNodeDoubleClick(e, treeNode) {\n      this.__emit('dblclick', e, treeNode);\n    },\n    onNodeSelect: function onNodeSelect(e, treeNode) {\n      var selectedKeys = this.$data._selectedKeys;\n      var keyEntities = this.$data._keyEntities;\n      var multiple = this.$props.multiple;\n\n      var _getOptionProps = getOptionProps(treeNode),\n          selected = _getOptionProps.selected,\n          eventKey = _getOptionProps.eventKey;\n\n      var targetSelected = !selected;\n      // Update selected keys\n      if (!targetSelected) {\n        selectedKeys = arrDel(selectedKeys, eventKey);\n      } else if (!multiple) {\n        selectedKeys = [eventKey];\n      } else {\n        selectedKeys = arrAdd(selectedKeys, eventKey);\n      }\n\n      // [Legacy] Not found related usage in doc or upper libs\n      var selectedNodes = selectedKeys.map(function (key) {\n        var entity = keyEntities.get(key);\n        if (!entity) return null;\n\n        return entity.node;\n      }).filter(function (node) {\n        return node;\n      });\n\n      this.setUncontrolledState({ _selectedKeys: selectedKeys });\n\n      var eventObj = {\n        event: 'select',\n        selected: targetSelected,\n        node: treeNode,\n        selectedNodes: selectedNodes,\n        nativeEvent: e\n      };\n      this.__emit('update:selectedKeys', selectedKeys);\n      this.__emit('select', selectedKeys, eventObj);\n    },\n    onNodeCheck: function onNodeCheck(e, treeNode, checked) {\n      var _$data3 = this.$data,\n          keyEntities = _$data3._keyEntities,\n          oriCheckedKeys = _$data3._checkedKeys,\n          oriHalfCheckedKeys = _$data3._halfCheckedKeys;\n      var checkStrictly = this.$props.checkStrictly;\n\n      var _getOptionProps2 = getOptionProps(treeNode),\n          eventKey = _getOptionProps2.eventKey;\n\n      // Prepare trigger arguments\n\n\n      var checkedObj = void 0;\n      var eventObj = {\n        event: 'check',\n        node: treeNode,\n        checked: checked,\n        nativeEvent: e\n      };\n\n      if (checkStrictly) {\n        var checkedKeys = checked ? arrAdd(oriCheckedKeys, eventKey) : arrDel(oriCheckedKeys, eventKey);\n        var halfCheckedKeys = arrDel(oriHalfCheckedKeys, eventKey);\n        checkedObj = { checked: checkedKeys, halfChecked: halfCheckedKeys };\n\n        eventObj.checkedNodes = checkedKeys.map(function (key) {\n          return keyEntities.get(key);\n        }).filter(function (entity) {\n          return entity;\n        }).map(function (entity) {\n          return entity.node;\n        });\n\n        this.setUncontrolledState({ _checkedKeys: checkedKeys });\n      } else {\n        var _conductCheck = conductCheck([eventKey], checked, keyEntities, {\n          checkedKeys: oriCheckedKeys,\n          halfCheckedKeys: oriHalfCheckedKeys\n        }),\n            _checkedKeys = _conductCheck.checkedKeys,\n            _halfCheckedKeys = _conductCheck.halfCheckedKeys;\n\n        checkedObj = _checkedKeys;\n\n        // [Legacy] This is used for `rc-tree-select`\n        eventObj.checkedNodes = [];\n        eventObj.checkedNodesPositions = [];\n        eventObj.halfCheckedKeys = _halfCheckedKeys;\n\n        _checkedKeys.forEach(function (key) {\n          var entity = keyEntities.get(key);\n          if (!entity) return;\n\n          var node = entity.node,\n              pos = entity.pos;\n\n\n          eventObj.checkedNodes.push(node);\n          eventObj.checkedNodesPositions.push({ node: node, pos: pos });\n        });\n\n        this.setUncontrolledState({\n          _checkedKeys: _checkedKeys,\n          _halfCheckedKeys: _halfCheckedKeys\n        });\n      }\n      this.__emit('check', checkedObj, eventObj);\n    },\n    onNodeLoad: function onNodeLoad(treeNode) {\n      var _this2 = this;\n\n      return new Promise(function (resolve) {\n        // We need to get the latest state of loading/loaded keys\n        _this2.setState(function (_ref) {\n          var _ref$_loadedKeys = _ref._loadedKeys,\n              loadedKeys = _ref$_loadedKeys === undefined ? [] : _ref$_loadedKeys,\n              _ref$_loadingKeys = _ref._loadingKeys,\n              loadingKeys = _ref$_loadingKeys === undefined ? [] : _ref$_loadingKeys;\n          var loadData = _this2.$props.loadData;\n\n          var _getOptionProps3 = getOptionProps(treeNode),\n              eventKey = _getOptionProps3.eventKey;\n\n          if (!loadData || loadedKeys.indexOf(eventKey) !== -1 || loadingKeys.indexOf(eventKey) !== -1) {\n            return {};\n          }\n\n          // Process load data\n          var promise = loadData(treeNode);\n          promise.then(function () {\n            var _$data4 = _this2.$data,\n                currentLoadedKeys = _$data4._loadedKeys,\n                currentLoadingKeys = _$data4._loadingKeys;\n\n            var newLoadedKeys = arrAdd(currentLoadedKeys, eventKey);\n            var newLoadingKeys = arrDel(currentLoadingKeys, eventKey);\n\n            // onLoad should trigger before internal setState to avoid `loadData` trigger twice.\n            // https://github.com/ant-design/ant-design/issues/12464\n            _this2.__emit('load', newLoadedKeys, {\n              event: 'load',\n              node: treeNode\n            });\n            _this2.setUncontrolledState({\n              _loadedKeys: newLoadedKeys\n            });\n            _this2.setState({\n              _loadingKeys: newLoadingKeys\n            });\n            resolve();\n          });\n\n          return {\n            _loadingKeys: arrAdd(loadingKeys, eventKey)\n          };\n        });\n      });\n    },\n    onNodeExpand: function onNodeExpand(e, treeNode) {\n      var _this3 = this;\n\n      var expandedKeys = this.$data._expandedKeys;\n      var loadData = this.$props.loadData;\n\n      var _getOptionProps4 = getOptionProps(treeNode),\n          eventKey = _getOptionProps4.eventKey,\n          expanded = _getOptionProps4.expanded;\n\n      // Update selected keys\n\n\n      var index = expandedKeys.indexOf(eventKey);\n      var targetExpanded = !expanded;\n\n      warning(expanded && index !== -1 || !expanded && index === -1, 'Expand state not sync with index check');\n\n      if (targetExpanded) {\n        expandedKeys = arrAdd(expandedKeys, eventKey);\n      } else {\n        expandedKeys = arrDel(expandedKeys, eventKey);\n      }\n\n      this.setUncontrolledState({ _expandedKeys: expandedKeys });\n      this.__emit('expand', expandedKeys, {\n        node: treeNode,\n        expanded: targetExpanded,\n        nativeEvent: e\n      });\n      this.__emit('update:expandedKeys', expandedKeys);\n\n      // Async Load data\n      if (targetExpanded && loadData) {\n        var loadPromise = this.onNodeLoad(treeNode);\n        return loadPromise ? loadPromise.then(function () {\n          // [Legacy] Refresh logic\n          _this3.setUncontrolledState({ _expandedKeys: expandedKeys });\n        }) : null;\n      }\n\n      return null;\n    },\n    onNodeMouseEnter: function onNodeMouseEnter(event, node) {\n      this.__emit('mouseenter', { event: event, node: node });\n    },\n    onNodeMouseLeave: function onNodeMouseLeave(event, node) {\n      this.__emit('mouseleave', { event: event, node: node });\n    },\n    onNodeContextMenu: function onNodeContextMenu(event, node) {\n      event.preventDefault();\n      this.__emit('rightClick', { event: event, node: node });\n    },\n\n\n    /**\n     * Only update the value which is not in props\n     */\n    setUncontrolledState: function setUncontrolledState(state) {\n      var needSync = false;\n      var newState = {};\n      var props = getOptionProps(this);\n      Object.keys(state).forEach(function (name) {\n        if (name.replace('_', '') in props) return;\n        needSync = true;\n        newState[name] = state[name];\n      });\n\n      if (needSync) {\n        this.setState(newState);\n      }\n    },\n    registerTreeNode: function registerTreeNode(key, node) {\n      if (node) {\n        this.domTreeNodes[key] = node;\n      } else {\n        delete this.domTreeNodes[key];\n      }\n    },\n    isKeyChecked: function isKeyChecked(key) {\n      var _$data$_checkedKeys = this.$data._checkedKeys,\n          checkedKeys = _$data$_checkedKeys === undefined ? [] : _$data$_checkedKeys;\n\n      return checkedKeys.indexOf(key) !== -1;\n    },\n\n\n    /**\n     * [Legacy] Original logic use `key` as tracking clue.\n     * We have to use `cloneElement` to pass `key`.\n     */\n    renderTreeNode: function renderTreeNode(child, index) {\n      var level = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      var _$data5 = this.$data,\n          keyEntities = _$data5._keyEntities,\n          _$data5$_expandedKeys = _$data5._expandedKeys,\n          expandedKeys = _$data5$_expandedKeys === undefined ? [] : _$data5$_expandedKeys,\n          _$data5$_selectedKeys = _$data5._selectedKeys,\n          selectedKeys = _$data5$_selectedKeys === undefined ? [] : _$data5$_selectedKeys,\n          _$data5$_halfCheckedK = _$data5._halfCheckedKeys,\n          halfCheckedKeys = _$data5$_halfCheckedK === undefined ? [] : _$data5$_halfCheckedK,\n          _$data5$_loadedKeys = _$data5._loadedKeys,\n          loadedKeys = _$data5$_loadedKeys === undefined ? [] : _$data5$_loadedKeys,\n          _$data5$_loadingKeys = _$data5._loadingKeys,\n          loadingKeys = _$data5$_loadingKeys === undefined ? [] : _$data5$_loadingKeys,\n          dragOverNodeKey = _$data5._dragOverNodeKey,\n          dropPosition = _$data5._dropPosition;\n\n      var pos = getPosition(level, index);\n      var key = child.key;\n      if (!key && (key === undefined || key === null)) {\n        key = pos;\n      }\n      if (!keyEntities.get(key)) {\n        warnOnlyTreeNode();\n        return null;\n      }\n\n      return cloneElement(child, {\n        props: {\n          eventKey: key,\n          expanded: expandedKeys.indexOf(key) !== -1,\n          selected: selectedKeys.indexOf(key) !== -1,\n          loaded: loadedKeys.indexOf(key) !== -1,\n          loading: loadingKeys.indexOf(key) !== -1,\n          checked: this.isKeyChecked(key),\n          halfChecked: halfCheckedKeys.indexOf(key) !== -1,\n          pos: pos,\n\n          // [Legacy] Drag props\n          dragOver: dragOverNodeKey === key && dropPosition === 0,\n          dragOverGapTop: dragOverNodeKey === key && dropPosition === -1,\n          dragOverGapBottom: dragOverNodeKey === key && dropPosition === 1\n        },\n        key: key\n      });\n    }\n  },\n\n  render: function render() {\n    var _this4 = this;\n\n    var h = arguments[0];\n    var treeNode = this.$data._treeNode;\n    var _$props = this.$props,\n        prefixCls = _$props.prefixCls,\n        focusable = _$props.focusable,\n        showLine = _$props.showLine,\n        _$props$tabIndex = _$props.tabIndex,\n        tabIndex = _$props$tabIndex === undefined ? 0 : _$props$tabIndex;\n\n\n    return h(\n      'ul',\n      {\n        'class': classNames(prefixCls, _defineProperty({}, prefixCls + '-show-line', showLine)),\n        attrs: { role: 'tree',\n          unselectable: 'on',\n          tabIndex: focusable ? tabIndex : null\n        }\n      },\n      [mapChildren(treeNode, function (node, index) {\n        return _this4.renderTreeNode(node, index);\n      })]\n    );\n  }\n};\n\nexport { Tree };\n\nexport default proxyComponent(Tree);"],"mappings":"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"},"metadata":{},"sourceType":"module"}
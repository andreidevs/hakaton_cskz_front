{"ast":null,"code":"import \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport _toConsumableArray from 'babel-runtime/helpers/toConsumableArray';\nimport { getNodeChildren, convertTreeToEntities } from '../vc-tree/src/util';\nimport { getSlots } from '../_util/props-util';\nvar Record = {\n  None: 'node',\n  Start: 'start',\n  End: 'end'\n}; // TODO: Move this logic into `rc-tree`\n\nfunction traverseNodesKey(rootChildren, callback) {\n  var nodeList = getNodeChildren(rootChildren) || [];\n\n  function processNode(node) {\n    var key = node.key;\n    var children = getSlots(node)['default'];\n\n    if (callback(key, node) !== false) {\n      traverseNodesKey(typeof children === 'function' ? children() : children, callback);\n    }\n  }\n\n  nodeList.forEach(processNode);\n}\n\nexport function getFullKeyList(children) {\n  var _convertTreeToEntitie = convertTreeToEntities(children),\n      keyEntities = _convertTreeToEntitie.keyEntities;\n\n  return [].concat(_toConsumableArray(keyEntities.keys()));\n}\n/** 计算选中范围，只考虑expanded情况以优化性能 */\n\nexport function calcRangeKeys(rootChildren, expandedKeys, startKey, endKey) {\n  var keys = [];\n  var record = Record.None;\n\n  if (startKey && startKey === endKey) {\n    return [startKey];\n  }\n\n  if (!startKey || !endKey) {\n    return [];\n  }\n\n  function matchKey(key) {\n    return key === startKey || key === endKey;\n  }\n\n  traverseNodesKey(rootChildren, function (key) {\n    if (record === Record.End) {\n      return false;\n    }\n\n    if (matchKey(key)) {\n      // Match test\n      keys.push(key);\n\n      if (record === Record.None) {\n        record = Record.Start;\n      } else if (record === Record.Start) {\n        record = Record.End;\n        return false;\n      }\n    } else if (record === Record.Start) {\n      // Append selection\n      keys.push(key);\n    }\n\n    if (expandedKeys.indexOf(key) === -1) {\n      return false;\n    }\n\n    return true;\n  });\n  return keys;\n}\nexport function convertDirectoryKeysToNodes(rootChildren, keys) {\n  var restKeys = [].concat(_toConsumableArray(keys));\n  var nodes = [];\n  traverseNodesKey(rootChildren, function (key, node) {\n    var index = restKeys.indexOf(key);\n\n    if (index !== -1) {\n      nodes.push(node);\n      restKeys.splice(index, 1);\n    }\n\n    return !!restKeys.length;\n  });\n  return nodes;\n}\nexport function getFullKeyListByTreeData(treeData) {\n  var keys = [];\n  (treeData || []).forEach(function (item) {\n    keys.push(item.key);\n\n    if (item.children) {\n      keys = [].concat(_toConsumableArray(keys), _toConsumableArray(getFullKeyListByTreeData(item.children)));\n    }\n  });\n  return keys;\n}","map":{"version":3,"names":["_toConsumableArray","getNodeChildren","convertTreeToEntities","getSlots","Record","None","Start","End","traverseNodesKey","rootChildren","callback","nodeList","processNode","node","key","children","forEach","getFullKeyList","_convertTreeToEntitie","keyEntities","concat","keys","calcRangeKeys","expandedKeys","startKey","endKey","record","matchKey","push","indexOf","convertDirectoryKeysToNodes","restKeys","nodes","index","splice","length","getFullKeyListByTreeData","treeData","item"],"sources":["/Users/andreidev/domains/hakaton_cskz_front/node_modules/ant-design-vue/es/tree/util.js"],"sourcesContent":["import _toConsumableArray from 'babel-runtime/helpers/toConsumableArray';\nimport { getNodeChildren, convertTreeToEntities } from '../vc-tree/src/util';\nimport { getSlots } from '../_util/props-util';\n\nvar Record = {\n  None: 'node',\n  Start: 'start',\n  End: 'end'\n};\n\n// TODO: Move this logic into `rc-tree`\nfunction traverseNodesKey(rootChildren, callback) {\n  var nodeList = getNodeChildren(rootChildren) || [];\n\n  function processNode(node) {\n    var key = node.key;\n\n    var children = getSlots(node)['default'];\n    if (callback(key, node) !== false) {\n      traverseNodesKey(typeof children === 'function' ? children() : children, callback);\n    }\n  }\n\n  nodeList.forEach(processNode);\n}\n\nexport function getFullKeyList(children) {\n  var _convertTreeToEntitie = convertTreeToEntities(children),\n      keyEntities = _convertTreeToEntitie.keyEntities;\n\n  return [].concat(_toConsumableArray(keyEntities.keys()));\n}\n\n/** 计算选中范围，只考虑expanded情况以优化性能 */\nexport function calcRangeKeys(rootChildren, expandedKeys, startKey, endKey) {\n  var keys = [];\n  var record = Record.None;\n\n  if (startKey && startKey === endKey) {\n    return [startKey];\n  }\n  if (!startKey || !endKey) {\n    return [];\n  }\n\n  function matchKey(key) {\n    return key === startKey || key === endKey;\n  }\n\n  traverseNodesKey(rootChildren, function (key) {\n    if (record === Record.End) {\n      return false;\n    }\n\n    if (matchKey(key)) {\n      // Match test\n      keys.push(key);\n\n      if (record === Record.None) {\n        record = Record.Start;\n      } else if (record === Record.Start) {\n        record = Record.End;\n        return false;\n      }\n    } else if (record === Record.Start) {\n      // Append selection\n      keys.push(key);\n    }\n\n    if (expandedKeys.indexOf(key) === -1) {\n      return false;\n    }\n\n    return true;\n  });\n\n  return keys;\n}\n\nexport function convertDirectoryKeysToNodes(rootChildren, keys) {\n  var restKeys = [].concat(_toConsumableArray(keys));\n  var nodes = [];\n  traverseNodesKey(rootChildren, function (key, node) {\n    var index = restKeys.indexOf(key);\n    if (index !== -1) {\n      nodes.push(node);\n      restKeys.splice(index, 1);\n    }\n\n    return !!restKeys.length;\n  });\n  return nodes;\n}\n\nexport function getFullKeyListByTreeData(treeData) {\n  var keys = [];\n\n  (treeData || []).forEach(function (item) {\n    keys.push(item.key);\n    if (item.children) {\n      keys = [].concat(_toConsumableArray(keys), _toConsumableArray(getFullKeyListByTreeData(item.children)));\n    }\n  });\n  return keys;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}